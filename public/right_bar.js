function showDescription(description) {
    const descriptionPanel = document.getElementById('descriptionPanel');
    const descriptionContent = document.getElementById('descriptionContent');
    const descriptionHeader = document.getElementById('descriptionHeader');
    const descriptionId = document.getElementById('descriptionId');

    const descriptionSpecialHeader = document.getElementById('descriptionContentSpecialHeader');
    const descriptionSpecial = document.getElementById('pizdec');

    const activeLeaf = document.querySelector('.node-leaf.active');

    if (activeLeaf) {
        activeLeaf.classList.remove('active');
    }

    const leaf = event.target;
    leaf.classList.add('active');

    descriptionContent.innerText = descriptions[description] || description;
    descriptionHeader.innerText = headers[description] || description;
    descriptionId.innerText = ids[description] || description;

    if (description in specials) {
        if (descriptionSpecialHeader) {
            descriptionSpecialHeader.innerText = specials[description] || description;
        }
    } else {
        if (descriptionSpecialHeader) {
            descriptionSpecialHeader.innerText = "";
        }
    }

    descriptionPanel.classList.add('open');
}

function closeDescriptionPanel() {
    const descriptionPanel = document.getElementById('descriptionPanel');
    const activeLeaf = document.querySelector('.node-leaf.active');

    if (activeLeaf) {
        activeLeaf.classList.remove('active');
    }

    descriptionPanel.classList.remove('open');
}

document.addEventListener('click', function(event) {
    const descriptionPanel = document.getElementById('descriptionPanel');
    if (!descriptionPanel.contains(event.target) && !event.target.classList.contains('node-leaf')) {
        closeDescriptionPanel();
    }
});
document.getElementById('closeDescriptionPanel').addEventListener('click', closeDescriptionPanel);

const headers = {
  'Asset Vulnerability Enumeration': 'Перечисление уязвимостей активов',
  'Container Image Analysis': 'Анализ образов контейнеров',
  'Configuration Inventory': 'Инвентаризация конфигурации',
  'Data Inventory': 'Инвентаризация данных',
  'Hardware Component Inventory': 'Инвентаризация аппаратных компонентов',
  'Network Node Inventory': 'Инвентаризация сетевых узлов',
  'Software Inventory': 'Инвентаризация ПО',
  'Logical Link Mapping': 'Маппинг логических связей',
  'Active Logical Link Mapping': 'Активный маппинг логических связей',
  'Passive Logical Link Mapping': 'Пассивный маппинг логических связей',
  'Network Traffic Policy Mapping': 'Составление политики сетевого трафика',
  'Physical Link Mapping': 'Маппинг физических каналов',
  'Active Physical Link Mapping': 'Активный маппинг физических каналов',
  'Access Modeling': 'Моделирование доступа',
  'Operational Dependency Mapping': 'Сопоставление операционных зависимостей',
  'Operational Risk Assessment': 'Оценка операционных рисков',
  'Organization Mapping': 'Моделирование организации',
  'Data Exchange Mapping': 'Сопоставление обмена данными',
  'Service Dependency Mapping': 'Сопоставление зависимостей сервисов',
  'System Dependency Mapping': 'Сопоставление системных зависимостей',
  'System Vulnerability Assessment': 'Оценка уязвимости систем',
  'Application Configuration Hardening': 'Закалка конфигурации приложений',
  'Dead Code Elimination': 'Ликвидация "мертвого кода"',
  'Exception Handler Pointer Validation': 'Валидация исключений указателя',
  'Pointer Authentication': 'Pointer Authentication',
  'Process Segment Execution Prevention': 'Предотвращение выполнения сегмента процесса',
  'Segment Address Offset Randomization': 'Рандомизация смещения адреса сегмента',
  'Stack Frame Canary Validation': 'Валидация фрейма канареек',
  'Biometric Authentication': 'Биометрическая аутентификация',
  'Certificate Pinning': 'Прикрепление сертификатов',
  'Credential Rotation': 'Ротация учетных данных',
  'Credential Transmission Scoping': 'Передача учетных данных',
  'Domain Trust Policy': 'Политика доверия к доменам',
  'Multi-factor Authentication': 'Мультифакторная аутентификация',
  'One-time Password': 'Одноразовый пароль',
  'Strong Password Policy': 'Строгая политика паролей',
  'User Account Permissions': 'Права доступа УЗ пользователя',
  'Message Authentication': 'Аутентификация сообщений',
  'Message Encryption': 'Шифрование сообщений',
  'Transfer Agent Authentication': 'Аутентификация передачи',
  'Bootloader Authentication': 'Аутентификация загрузчика',
  'Disk Encryption': 'Шифрование диска',
  'Driver Load Integrity Checking': 'Проверка целостности загрузки драйвера',
  'File Encryption': 'Шифрование файлов',
  'Local File Permissions': 'Разрешения локальных файлов',
  'RF Shielding': 'Экранирование радиочастот',
  'Software Update': 'Обновление ПО',
  'System Configuration Permissions': 'Права доступа к конфигурации системы',
  'TPM Boot Integrity': 'Целостность загрузки TPM',
  'Dynamic Analysis': 'Динамический анализ',
  'Emulated File Analysis': 'Эмулированный анализ файлов',
  'File Content Analysis': 'Анализ содержимого файлов',
  'File Content Rules': 'Правила анализа содержимого файлов ',
  'File Hashing': 'Хеширование файлов',
  'Homoglyph Detection': 'Обнаружение омоглифов',
  'Identifier Activity Analysis': 'Анализ активности идентификаторов',
  'Identifier Reputation Analysis': 'Анализ репутации идентификаторов',
  'Domain Name Reputation Analysis': 'Анализ репутации доменных имен',
  'File Hash Reputation Analysis': 'Анализ репутации хэша файла',
  'IP Reputation Analysis': 'Анализ репутации IP-адресов',
  'URL Reputation Analysis': 'Анализ репутации URL-адресов',
  'URL Analysis': 'Анализ URL-адресов',
  'Sender MTA Reputation Analysis': 'Анализ репутации MTA отправителя',
  'Sender Reputation Analysis': 'Анализ репутации отправителя',
  'Administrative Network Activity Analysis': 'Анализ активности корпоративной сети',
  'Byte Sequence Emulation': 'Эмуляция последовательности байтов',
  'Certificate Analysis': 'Анализ сертификатов',
  'Active Certificate Analysis': 'Активный анализ сертификатов',
  'Passive Certificate Analysis': 'Пассивный анализ сертификатов',
  'Client-server Payload Profiling': 'Профилирование полезной нагрузки клиент-сервера',
  'Connection Attempt Analysis': 'Анализ попыток подключения',
  'DNS Traffic Analysis': 'Анализ трафика DNS',
  'File Carving': 'Карвинг файлов',
  'Inbound Session Volume Analysis': 'Анализ объема входящих сессий',
  'IPC Traffic Analysis': 'Анализ трафика IPC',
  'Network Traffic Community Deviation': 'Отклонение от нормы сетевого трафика',
  'Per Host Download-Upload Ratio Analysis': 'Анализ соотношения загрузки и выгрузки для каждого хоста',
  'Protocol Metadata Anomaly Detection': 'Обнаружение аномалий в метаданных протоколов',
  'Relay Pattern Analysis': 'Анализ паттернов ретрансляции',
  'Remote Terminal Session Detection': 'Обнаружение сеанса удаленного терминала',
  'RPC Traffic Analysis': 'Анализ трафика RPC',
  'File Integrity Monitoring': 'Мониторинг целостности файлов',
  'Firmware Behavior Analysis': 'Анализ поведения ПО',
  'Firmware Embedded Monitoring Code': 'Код мониторинга прошивки',
  'Firmware Verification': 'Проверка прошивки',
  'Peripheral Firmware Verification': 'Проверка прошивки периферийного устройства',
  'System Firmware Verification': 'Проверка прошивки системы',
  'Operating System Monitoring': 'Мониторинг операционной системы',
  'Endpoint Health Beacon': 'Мониторинг состояния безопасности конечной точки',
  'Input Device Analysis': 'Анализ устройств ввода',
  'Memory Boundary Tracking': 'Отслеживание границ памяти',
  'Scheduled Job Analysis': 'Анализ планировщика задач',
  'System Daemon Monitoring': 'Мониторинг системных процессов',
  'System File Analysis': 'Анализ системных файлов',
  'Service Binary Verification': 'Верификация бинарей служб',
  'System Init Config Analysis': 'Анализ начальной конфигурации системы',
  'User Session Init Config Analysis': 'Анализ начальной конфигурации сеанса пользователя',
  'Database Query String Analysis': 'Анализ запросов к базам данных',
  'File Access Pattern Analysis': 'Шаблонный анализ доступа к файлам',
  'Indirect Branch Call Analysis': 'Анализ косвенных переходов',
  'Process Code Segment Verification': 'Верификация сегментов кода процессов',
  'Process Self-Modification Detection': 'Обнаружение самомодификации процесса',
  'Process Spawn Analysis': 'Анализ появления процессов',
  'Process Lineage Analysis': 'Анализ линейки процессов',
  'Script Execution Analysis': 'Анализ выполнения сценариев',
  'Shadow Stack Comparisons': 'Сравнение теневых стеков',
  'System Call Analysis': 'Анализ системных вызовов',
  'File Creation Analysis': 'Анализ создания файлов',
  'Authentication Event Thresholding': 'Обработка событий аутентификации',
  'Authorization Event Thresholding': 'Обработка событий авторизации',
  'Credential Compromise Scope Analysis': 'Анализ масштаба компрометации учетных данных',
  'Domain Account Monitoring': 'Мониторинг доменных УЗ',
  'Job Function Access Pattern Analysis': 'Шаблонный анализ доступа',
  'Local Account Monitoring': 'Мониторинг локальных УЗ',
  'Resource Access Pattern Analysis': 'Шаблонный анализ доступа к ресурсам',
  'Session Duration Analysis': 'Анализ продолжительности сессии',
  'User Data Transfer Analysis': 'Анализ передачи пользовательских данных',
  'User Geolocation Logon Pattern Analysis': 'Шаблонный анализ геолокации при аутентификации пользователей',
  'Web Session Activity Analysis': 'Анализ активности веб-сессий',
  'Executable Allowlisting': 'Разрешение исполняемых файлов',
  'Executable Denylisting': 'Запрет исполняемых файлов',
  'Hardware-based Process Isolation': 'Изоляция процессов на основе аппаратных средств',
  'IO Port Restriction': 'Ограничение портов ввода-вывода',
  'Kernel-based Process Isolation': 'Изоляция процессов на основе ядра',
  'Mandatory Access Control': 'Мандатное управление доступом ',
  'System Call Filtering': 'Фильтрация системных вызовов',
  'Broadcast Domain Isolation': 'Изоляция широковещательного домена',
  'DNS Allowlisting': 'Список разрешенных DNS',
  'DNS Denylisting': 'Список запрещенных DNS',
  'Forward Resolution Domain Denylisting': 'Запрет доменов с переадресацией',
  'Hierarchical Domain Denylisting': 'Иерархический запрет доменов',
  'Homoglyph Denylisting': 'Список запрещенных омоглифов',
  'Forward Resolution IP Denylisting': 'Forward Resolution IP Denylisting',
  'Reverse Resolution IP Denylisting': 'Reverse Resolution IP Denylisting',
  'Encrypted Tunnels': 'Шифрование туннелей',
  'Network Traffic Filtering': 'Фильтрация сетевого трафика',
  'Inbound Traffic Filtering': 'Фильтрация входящего трафика',
  'Outbound Traffic Filtering': 'Фильтрация исходящего трафика',
  'Email Filtering': 'Фильтрация электронной почты',
  'Connected Honeynet': 'Подключенный Honeynet',
  'Integrated Honeynet': 'Интегрированный Honeynet',
  'Standalone Honeynet': 'Автономный Honeynet',
  'Decoy File': 'Фальшивый файл',
  'Decoy Network Resource': 'Фальшивый сетевой ресурс',
  'Decoy Persona': 'Фальшивая личность',
  'Decoy Public Release': 'Фальшивый публичный релиз',
  'Decoy Session Token': 'Фальшивый токен сессии',
  'Decoy User Credential': 'Фальшивые учетные данные пользователя',
  'Account Locking': 'Блокировка аккаунта',
  'Authentication Cache Invalidation': 'Ивалидация кэша аутентификации',
  'Credential Revoking': 'Отзыв учетных данных',
  'File Removal': 'Удаление файлов',
  'Email Removal': 'Удаление электронной почты',
  'Host Shutdown': 'Отключение хоста',
  'Host Reboot': 'Перезагрузка хоста',
  'Process Suspension': 'Приостановка процесса',
  'Process Termination': 'Завершение процесса',
  'Restore Network Access': 'Восстановление доступа к сети',
  'Restore User Account Access': 'Восстановление доступа к УЗ пользователя',
  'Unlock Account': 'Разблокировка УЗ',
  'Reissue Credential': 'Перевыпуск учетных данных',
  'Restore Configuration': 'Восстановление конфигурации',
  'Restore Database': 'Восстановление БД',
  'Restore Disk Image': 'Восстановление образа диска',
  'Restore File': 'Восстановление файла',
  'Restore Email': 'Восстановление электронной почты',
  'Restore Software': 'Восстановление ПО',
};

const ids = {
  'Asset Vulnerability Enumeration': 'D3-AVE (Asset Vulnerability Enumeration)',
  'Container Image Analysis': 'D3-CIA (Container Image Analysis)',
  'Configuration Inventory': 'D3-CI (Configuration Inventory)',
  'Data Inventory': 'D3-DI (Data Inventory)',
  'Hardware Component Inventory': 'D3-HCI (Hardware Component Inventory)',
  'Network Node Inventory': 'D3-NNI (Network Node Inventory)',
  'Software Inventory': 'D3-SWI (Software Inventory)',
  'Logical Link Mapping': 'D3-LLM (Logical Link Mapping)',
  'Active Logical Link Mapping': 'D3-ALLM (Active Logical Link Mapping)',
  'Passive Logical Link Mapping': 'D3-PLLM (Passive Logical Link Mapping)',
  'Network Traffic Policy Mapping': 'D3-NTPM (Network Traffic Policy Mapping)',
  'Physical Link Mapping': 'D3-PLM (Physical Link Mapping)',
  'Active Physical Link Mapping': 'D3-APLM (Active Physical Link Mapping)',
  'Access Modeling': 'D3-AM (Access Modeling)',
  'Operational Dependency Mapping': 'D3-ODM (Operational Dependency Mapping)',
  'Operational Risk Assessment': 'D3-ORA (Operational Risk Assessment)',
  'Organization Mapping': 'D3-OM (Organization Mapping)',
  'Data Exchange Mapping': 'D3-DEM (Data Exchange Mapping)',
  'Service Dependency Mapping': 'D3-SVCDM (Service Dependency Mapping)',
  'System Dependency Mapping': 'D3-SYSDM (System Dependency Mapping)',
  'System Vulnerability Assessment': 'D3-SYSVA (System Vulnerability Assessment)',
  'Application Configuration Hardening': 'D3-ACH (Application Configuration Hardening)',
  'Dead Code Elimination': 'D3-DCE (Dead Code Elimination)',
  'Exception Handler Pointer Validation': 'D3-EHPV (Exception Handler Pointer Validation)',
  'Pointer Authentication': 'D3-PAN (Pointer Authentication)',
  'Process Segment Execution Prevention': 'D3-PSEP (Process Segment Execution Prevention)',
  'Segment Address Offset Randomization': 'D3-SAOR (Segment Address Offset Randomization)',
  'Stack Frame Canary Validation': 'D3-SFCV (Stack Frame Canary Validation)',
  'Biometric Authentication': 'D3-BAN (Biometric Authentication)',
  'Certificate Pinning': 'D3-CP (Certificate Pinning)',
  'Credential Rotation': 'D3-CRO (Credential Rotation)',
  'Credential Transmission Scoping': 'D3-CTS (Credential Transmission Scoping)',
  'Domain Trust Policy': 'D3-DTP (Domain Trust Policy)',
  'Multi-factor Authentication': 'D3-MFA (Multi-factor Authentication)',
  'One-time Password': 'D3-OTP (One-time Password)',
  'Strong Password Policy': 'D3-SPP (Strong Password Policy)',
  'User Account Permissions': 'D3-UAP (User Account Permissions)',
  'Message Authentication': 'D3-MAN (Message Authentication)',
  'Message Encryption': 'D3-MENCR (Message Encryption)',
  'Transfer Agent Authentication': 'D3-TAAN (Transfer Agent Authentication)',
  'Bootloader Authentication': 'D3-BA (Bootloader Authentication)',
  'Disk Encryption': 'D3-DENCR (Disk Encryption)',
  'Driver Load Integrity Checking': 'D3-DLIC (Driver Load Integrity Checking)',
  'File Encryption': 'D3-FE (File Encryption)',
  'Local File Permissions': 'D3-LFP (Local File Permissions)',
  'RF Shielding': 'D3-RFS (RF Shielding)',
  'Software Update': 'D3-SU (Software Update)',
  'System Configuration Permissions': 'D3-SCP (System Configuration Permissions)',
  'TPM Boot Integrity': 'D3-TBI (TPM Boot Integrity)',
  'Dynamic Analysis': 'D3-DA (Dynamic Analysis)',
  'Emulated File Analysis': 'D3-EFA (Emulated File Analysis)',
  'File Content Analysis': 'D3-FCOA (File Content Analysis)',
  'File Content Rules': 'D3-FCR (File Content Rules)',
  'File Hashing': 'D3-FH (File Hashing)',
  'Homoglyph Detection': 'D3-HD (Homoglyph Detection)',
  'Identifier Activity Analysis': 'D3-IAA (Identifier Activity Analysis)',
  'Identifier Reputation Analysis': 'D3-IRA (Identifier Reputation Analysis)',
  'Domain Name Reputation Analysis': 'D3-DNRA (Domain Name Reputation Analysis)',
  'File Hash Reputation Analysis': 'D3-FHRA (File Hash Reputation Analysis)',
  'IP Reputation Analysis': 'D3-IPRA (IP Reputation Analysis)',
  'URL Reputation Analysis': 'D3-URA (URL Reputation Analysis)',
  'URL Analysis': 'D3-UA (URL Analysis)',
  'Sender MTA Reputation Analysis': 'D3-SMRA (Sender MTA Reputation Analysis)',
  'Sender Reputation Analysis': 'D3-SRA (Sender Reputation Analysis)',
  'Administrative Network Activity Analysis': 'D3-ANAA (Administrative Network Activity Analysis)',
  'Byte Sequence Emulation': 'D3-BSE (Byte Sequence Emulation)',
  'Certificate Analysis': 'D3-CA (Certificate Analysis)',
  'Active Certificate Analysis': 'D3-ACA (Active Certificate Analysis)',
  'Passive Certificate Analysis': 'D3-PCA (Passive Certificate Analysis)',
  'Client-server Payload Profiling': 'D3-CSPP (Client-server Payload Profiling)',
  'Connection Attempt Analysis': 'D3-CAA (Connection Attempt Analysis)',
  'DNS Traffic Analysis': 'D3-DNSTA (DNS Traffic Analysis)',
  'File Carving': 'D3-FC (File Carving)',
  'Inbound Session Volume Analysis': 'D3-ISVA (Inbound Session Volume Analysis)',
  'IPC Traffic Analysis': 'D3-IPCTA (IPC Traffic Analysis)',
  'Network Traffic Community Deviation': 'D3-NTCD (Network Traffic Community Deviation)',
  'Per Host Download-Upload Ratio Analysis': 'D3-PHDURA (Per Host Download-Upload Ratio Analysis)',
  'Protocol Metadata Anomaly Detection': 'D3-PMAD (Protocol Metadata Anomaly Detection)',
  'Relay Pattern Analysis': 'D3-RPA (Relay Pattern Analysis)',
  'Remote Terminal Session Detection': 'D3-RTSD (Remote Terminal Session Detection)',
  'RPC Traffic Analysis': 'D3-RTA (RPC Traffic Analysis)',
  'File Integrity Monitoring': 'D3-FIM (File Integrity Monitoring)',
  'Firmware Behavior Analysis': 'D3-FBA (Firmware Behavior Analysis)',
  'Firmware Embedded Monitoring Code': 'D3-FEMC (Firmware Embedded Monitoring Code)',
  'Firmware Verification': 'D3-FV (Firmware Verification)',
  'Peripheral Firmware Verification': 'D3-PFV (Peripheral Firmware Verification)',
  'System Firmware Verification': 'D3-SFV (System Firmware Verification)',
  'Operating System Monitoring': 'D3-OSM (Operating System Monitoring)',
  'Endpoint Health Beacon': 'D3-EHB (Endpoint Health Beacon)',
  'Input Device Analysis': 'D3-IDA (Input Device Analysis)',
  'Memory Boundary Tracking': 'D3-MBT (Memory Boundary Tracking)',
  'Scheduled Job Analysis': 'D3-SJA (Scheduled Job Analysis)',
  'System Daemon Monitoring': 'D3-SDM (System Daemon Monitoring)',
  'System File Analysis': 'D3-SFA (System File Analysis)',
  'Service Binary Verification': 'D3-SBV (Service Binary Verification)',
  'System Init Config Analysis': 'D3-SICA (System Init Config Analysis)',
  'User Session Init Config Analysis': 'D3-USICA (User Session Init Config Analysis)',
  'Database Query String Analysis': 'D3-DQSA (Database Query String Analysis)',
  'File Access Pattern Analysis': 'D3-FAPA (File Access Pattern Analysis)',
  'Indirect Branch Call Analysis': 'D3-IBCA (Indirect Branch Call Analysis)',
  'Process Code Segment Verification': 'D3-PCSV (Process Code Segment Verification)',
  'Process Self-Modification Detection': 'D3-PSMD (Process Self-Modification Detection)',
  'Process Spawn Analysis': 'D3-PSA (Process Spawn Analysis)',
  'Process Lineage Analysis': 'D3-PLA (Process Lineage Analysis)',
  'Script Execution Analysis': 'D3-SEA (Script Execution Analysis)',
  'Shadow Stack Comparisons': 'D3-SSC (Shadow Stack Comparisons)',
  'System Call Analysis': 'D3-SCA (System Call Analysis)',
  'File Creation Analysis': 'D3-FCA (File Creation Analysis)',
  'Authentication Event Thresholding': 'D3-ANET (Authentication Event Thresholding)',
  'Authorization Event Thresholding': 'D3-AZET (Authorization Event Thresholding)',
  'Credential Compromise Scope Analysis': 'D3-CCSA (Credential Compromise Scope Analysis)',
  'Domain Account Monitoring': 'D3-DAM (Domain Account Monitoring)',
  'Job Function Access Pattern Analysis': 'D3-JFAPA (Job Function Access Pattern Analysis)',
  'Local Account Monitoring': 'D3-LAM (Local Account Monitoring)',
  'Resource Access Pattern Analysis': 'D3-RAPA (Resource Access Pattern Analysis)',
  'Session Duration Analysis': 'D3-SDA (Session Duration Analysis)',
  'User Data Transfer Analysis': 'D3-UDTA (User Data Transfer Analysis)',
  'User Geolocation Logon Pattern Analysis': 'D3-UGLPA (User Geolocation Logon Pattern Analysis)',
  'Web Session Activity Analysis': 'D3-WSAA (Web Session Activity Analysis)',
  'Executable Allowlisting': 'D3-EAL (Executable Allowlisting)',
  'Executable Denylisting': 'D3-EDL (Executable Denylisting)',
  'Hardware-based Process Isolation': 'D3-HBPI (Hardware-based Process Isolation)',
  'IO Port Restriction': 'D3-IOPR (IO Port Restriction)',
  'Kernel-based Process Isolation': 'D3-KBPI (Kernel-based Process Isolation)',
  'Mandatory Access Control': 'D3-MAC (Mandatory Access Control)',
  'System Call Filtering': 'D3-SCF (System Call Filtering)',
  'Broadcast Domain Isolation': 'D3-BDI (Broadcast Domain Isolation)',
  'DNS Allowlisting': 'D3-DNSAL (DNS Allowlisting)',
  'DNS Denylisting': 'D3-DNSDL (DNS Denylisting)',
  'Forward Resolution Domain Denylisting': 'D3-FRDDL (Forward Resolution Domain Denylisting)',
  'Hierarchical Domain Denylisting': 'D3-HDDL (Hierarchical Domain Denylisting)',
  'Homoglyph Denylisting': 'D3-HDL (Homoglyph Denylisting)',
  'Forward Resolution IP Denylisting': 'D3-FRIDL (Forward Resolution IP Denylisting)',
  'Reverse Resolution IP Denylisting': 'D3-RRID (Reverse Resolution IP Denylisting)',
  'Encrypted Tunnels': 'D3-ET (Encrypted Tunnels)',
  'Network Traffic Filtering': 'D3-NTF (Network Traffic Filtering)',
  'Inbound Traffic Filtering': 'D3-ITF (Inbound Traffic Filtering)',
  'Outbound Traffic Filtering': 'D3-OTF (Outbound Traffic Filtering)',
  'Email Filtering': 'D3-EF (Email Filtering)',
  'Connected Honeynet': 'D3-CHN (Connected Honeynet)',
  'Integrated Honeynet': 'D3-IHN (Integrated Honeynet)',
  'Standalone Honeynet': 'D3-SHN (Standalone Honeynet)',
  'Decoy File': 'D3-DF (Decoy File)',
  'Decoy Network Resource': 'D3-DNR (Decoy Network Resource)',
  'Decoy Persona': 'D3-DP (Decoy Persona)',
  'Decoy Public Release': 'D3-DPR (Decoy Public Release)',
  'Decoy Session Token': 'D3-DST (Decoy Session Token)',
  'Decoy User Credential': 'D3-DUC (Decoy User Credential)',
  'Account Locking': 'D3-AL (Account Locking)',
  'Authentication Cache Invalidation': 'D3-ANCI (Authentication Cache Invalidation)',
  'Credential Revoking': 'D3-CR (Credential Revoking)',
  'File Removal': 'D3-FR (File Removal)',
  'Email Removal': 'D3-ER (Email Removal)',
  'Host Shutdown': 'D3-HS (Host Shutdown)',
  'Host Reboot': 'D3-HR (Host Reboot)',
  'Process Suspension': 'D3-PS (Process Suspension)',
  'Process Termination': 'D3-PT (Process Termination)',
  'Restore Network Access': 'D3-RNA (Restore Network Access)',
  'Restore User Account Access': 'D3-RUAA (Restore User Account Access)',
  'Unlock Account': 'D3-ULA (Unlock Account)',
  'Reissue Credential': 'D3-RIC (Reissue Credential)',
  'Restore Configuration': 'D3-RC (Restore Configuration)',
  'Restore Database': 'D3-RD (Restore Database)',
  'Restore Disk Image': 'D3-RDI (Restore Disk Image)',
  'Restore File': 'D3-RF (Restore File)',
  'Restore Email': 'D3-RE (Restore Email)',
  'Restore Software': 'D3-RS (Restore Software)',
};


const descriptions = {
    'Asset Vulnerability Enumeration': 'Перечисление уязвимостей активов обогащает объекты инвентаризации знаниями, определяющими их уязвимости.',
    'Container Image Analysis': 'Анализ образа контейнера на предмет соответствия набору политик',
    'Configuration Inventory': 'Инвентаризация конфигурации позволяет определить и записать конфигурацию программного и аппаратного обеспечения и их компонентов в организации.',
    'Data Inventory': 'Инвентаризация данных позволяет определить и записать схемы, форматы, объемы и местоположения данных, хранящихся и используемых в архитектуре организации.',
    'Hardware Component Inventory': 'Инвентаризация аппаратных компонентов выявляет и регистрирует аппаратные элементы в архитектуре организации',
    'Network Node Inventory': 'Инвентаризация сетевых узлов позволяет определить и записать все сетевые узлы (хосты, маршрутизаторы, коммутаторы, брандмауэры и т. д.) в архитектуре организации.',
    'Software Inventory': 'Инвентаризация программного обеспечения позволяет идентифицировать и регистрировать программные элементы в архитектуре организации.',
    'Logical Link Mapping': 'Маппинг логических связей создает модель существующих или предыдущих соединений между узлами, используя данные сетевого уровня или метаданные.',
    'Active Logical Link Mapping': 'Активное отображение логических связей позволяет отправлять и получать сетевой трафик как средство отображения всего канального уровня, где связи представляют логические потоки данных, а не физические соединения',
    'Passive Logical Link Mapping': 'Пассивный маппинг логических связей прослушивает только сетевой трафик в качестве средства сопоставления всего канального уровня, где связи представляют логические потоки данных, а не физические соединения.',
    'Network Traffic Policy Mapping': 'Составление политики сетевого трафика позволяет определить и смоделировать разрешенные пути передачи данных на сетевом, транпортном и/или прикладном уровнях.',
    'Physical Link Mapping': 'Сопоставление физических каналов позволяет определить и смоделировать связность сетевых устройств в физической сети.',
    'Active Physical Link Mapping': 'Активное отображение физических каналов позволяет отправлять и получать сетевой трафик в качестве средства отображения физического уровня.',
    'Access Modeling': 'Моделирование доступа позволяет определить и записать разрешения на доступ, предоставленные администраторам, пользователям, группам и системам.',
    'Operational Dependency Mapping': 'Операционное отображение зависимостей позволяет выявить и смоделировать зависимости деятельности организации друг от друга и от ее исполнителей (людей, систем и услуг). Это может включать моделирование деятельности организации на более высоком и более низком уровнях, формируя иерархию, или наслоение, зависимостей в деятельности организации.',
    'Operational Risk Assessment': 'Оценка операционного риска позволяет выявить и смоделировать уязвимости и риски деятельности организации по отдельности и в целом.',
    'Organization Mapping': 'Карта организации позволяет определить и отобразить людей, роли и группы в организации, а также взаимосвязи между ними.',
    'Data Exchange Mapping': 'Составление схемы обмена данными позволяет определить и отобразить на прикладном уровне планируемые организацией потоки данных, их типы, форматы и объемы между системами.',
    'Service Dependency Mapping': 'Сопоставление зависимостей сервисов позволяет определить сервисы, от которых зависит каждый конкретный сервис.',
    'System Dependency Mapping': 'Маппинг системных зависимостей позволяет выявить и смоделировать зависимости компонентов системы друг от друга для выполнения их функций.',
    'System Vulnerability Assessment': 'Оценка уязвимости системы включает в себя все уязвимости компонентов системы в контексте их конфигурации и внутренних зависимостей, а также может включать оценку риска, возникающего в результате проектирования системы в целом, а не только сумму уязвимостей отдельных компонентов.',
    'Application Configuration Hardening': 'Внесение изменений в конфигурацию приложения для уменьшения поверхности атаки.',
    'Dead Code Elimination': 'Удаление непригодного или «мертвого кода» из скомпилированного исходного кода',
    'Exception Handler Pointer Validation': 'Служит для проверки того, что указатель обработчика исключений, на который ссылается процесс, является действительным обработчиком исключений.',
    'Pointer Authentication': 'Сравнение криптографического хэша или производной значения указателя с ожидаемым значением.',
    'Process Segment Execution Prevention': 'Предотвращение выполнения любого адреса в области памяти, отличной от сегмента кода',
    'Segment Address Offset Randomization': 'Случайное определение базового (стартового) адреса одного или нескольких сегментов памяти во время инициализации процесса.',
    'Stack Frame Canary Validation': 'Сравнение значения, хранящегося во фрейме стека, с известным правильным значением для предотвращения или обнаружения перезаписи сегмента памяти.',
    'Biometric Authentication': 'Использование биометрии для аутентификации пользователя.',
    'Certificate Pinning': 'Закрепление сертификата X.509 сервера или его открытого ключа и его сравнение с представленным идентификатором сервера для обеспечения большей уверенности клиента в идентификации удаленного сервера при SSL-соединениях.',
    'Credential Rotation': 'Истечение срока действия существующего набора учетных данных и повторная выдача нового действительного набора',
    'Credential Transmission Scoping': 'Ограничение передачи учетных данных для определенного круга лиц.',
    'Domain Trust Policy': 'Ограничение взаимного доверия доменов путем изменения конфигурации домена.',
    'Multi-factor Authentication': 'Требуется подтверждение двух или более элементов для аутентификации пользователя.',
    'One-time Password': 'Одноразовый пароль действителен только для одной аутентификации пользователя.',
    'Strong Password Policy': 'Изменение настроек системы для большей надежности пароля.',
    'User Account Permissions': 'Ограничение доступа учетной записи пользователя к ресурсам.',
    'Message Authentication': 'Проверка подлинности отправителя сообщения и обеспечение целостности сообщения',
    'Message Encryption': 'Шифрование тела сообщения с помощью криптографического ключа.',
    'Transfer Agent Authentication': 'Проверка того, что серверные компоненты инфраструктуры обмена сообщениями авторизованы для отправки определенного сообщения.',
    'Bootloader Authentication': 'Криптографическая проверка подлинности программного обеспечения загрузчика перед загрузкой системы',
    'Disk Encryption': 'Шифрование раздела жесткого диска для предотвращения доступа к файловой системе в открытом виде.',
    'Driver Load Integrity Checking': 'Обеспечение целостности драйверов, загружаемых при инициализации операционной системы.',
    'File Encryption': 'Шифрование файла с помощью криптографического ключа.',
    'Local File Permissions': 'Ограничение доступа к локальным файлам путем настройки функций операционной системы.',
    'RF Shielding': 'Добавление физических барьеров на платформу для предотвращения нежелательных радиопомех.',
    'Software Update': 'Проведение обновления устаревшего программного обеспечения компонентов компьютерной системы.',
    'System Configuration Permissions': 'Ограничение изменения конфигурации системы определенным пользователем или группой пользователей',
    'TPM Boot Integrity': 'Обеспечение целостности платформы путем демонстрации того, что процесс загрузки начинается с доверенной комбинации аппаратного и программного обеспечения и продолжается до полной загрузки операционной системы и запуска приложений. Иногда называется статическим измерением корня доверия (Static Root of Trust Measurement, STRM).',
    'Dynamic Analysis': 'Выполнение или открытие файла в среде «песочницы», чтобы определить, является ли этот файл вредоносной программой или использует ли он другую программу, например программу для чтения документов.',
    'Emulated File Analysis': 'Моделирование инструкций в файле в поисках определенных шаблонов.',
    'File Content Analysis': 'Использование алгоритма сопоставления образцов для статического анализа содержимого файлов.',
    'File Content Rules': 'Использование языка правил сопоставления образцов для анализа содержимого файлов.',
    'File Hashing': 'Использование сравнения хэшей файлов для обнаружения известных вредоносных программ.',
    'Homoglyph Detection': 'Сравнение строк с помощью различных методов, чтобы определить, не представлена ли пользователю обманчивая или вредоносная строка.',
    'Identifier Activity Analysis': 'Получение известных идентификаторов вредоносных программ и их выявление в системе.',
    'Identifier Reputation Analysis': 'Анализ репутации идентификатора.',
    'Domain Name Reputation Analysis': 'Анализ репутации доменного имени.',
    'File Hash Reputation Analysis': 'Анализ репутации хэша файла.',
    'IP Reputation Analysis': 'Анализ репутации IP-адреса.',
    'URL Reputation Analysis': 'Анализ репутации URL-адреса.',
    'URL Analysis': 'Определение того, является ли URL-адрес доброкачественным или вредоносным, путем анализа URL-адреса или его компонентов.',
    'Sender MTA Reputation Analysis': 'Характеристика репутации агентов передачи почты (MTA) для определения рисков безопасности в электронных письмах.',
    'Sender Reputation Analysis': 'Определение репутации отправителя на основе информации, связанной с сообщением (например, электронная почта или мгновенный обмен сообщениями).',
    'Administrative Network Activity Analysis': 'Обнаружение несанкционированного использования административных сетевых протоколов путем анализа сетевой активности в сравнении со стандартным состоянием.',
    'Byte Sequence Emulation': 'Анализ последовательностей байтов и определение вероятности того, что они представляют собой вредоносный шелл-код.',
    'Certificate Analysis': 'Анализ сертификатов инфраструктуры открытых ключей на предмет их неправильной конфигурации или подделки с использованием сетевого трафика, полей сертификатов и журналов сторонних источников.',
    'Active Certificate Analysis': 'Активный сбор сертификатов PKI путем подключения к серверу и загрузки сертификатов сервера для анализа.',
    'Passive Certificate Analysis': 'Сбор сертификатов хоста из сетевого трафика или других пассивных источников, таких как certificate transparency log, и их анализ на предмет несанкционированной активности.',
    'Client-server Payload Profiling': 'Сравнение полезной нагрузки клиент-серверных запросов и ответов с базовым профилем для выявления отклонений.',
    'Connection Attempt Analysis': 'Анализ неудачных подключений в сети для обнаружения несанкционированной активности',
    'DNS Traffic Analysis': 'Анализ метаданных доменного имени, включая имена и записи DNS, для определения вероятности того, что домен будет ссылаться на заведомо опасные узлы.',
    'File Carving': 'Идентификация и извлечение файлов из протоколов сетевых приложений с помощью программного обеспечения для реассемблирования сетевых потоков.',
    'Inbound Session Volume Analysis': 'Анализ объема входящих сетевых сеансов или попыток подключения.',
    'IPC Traffic Analysis': 'Анализ стандартных протоколов межпроцессного взаимодействия (IPC) для выявления отклонений от нормальной работы протокола.',
    'Network Traffic Community Deviation': 'Создание стандартных групп узлов сети и выявление расхождений в общении между группами',
    'Per Host Download-Upload Ratio Analysis': 'Обнаружение аномалий, указывающих на вредоносную активность, путем сравнения объема загруженных и выгруженных хостом данных.',
    'Protocol Metadata Anomaly Detection': 'Сбор метаданных протоколов сетевого взаимодействия и выявление исключений из статистики.',
    'Relay Pattern Analysis': 'Обнаружение внутреннего узла, передающего трафик между внутренней и внешней сетью.',
    'Remote Terminal Session Detection': 'Обнаружение несанкционированного удаленного сеанса консоли терминала путем изучения сетевого трафика на сетевом узле.',
    'RPC Traffic Analysis': 'Мониторинг активности удаленных вызовов процедур в коммуникационном трафике для определения стандартных операций протокола и потенциальных действий злоумышленников.',
    'File Integrity Monitoring': 'Обнаружение любых подозрительных изменений файлов в cистеме.',
    'Firmware Behavior Analysis': 'Анализ поведения встроенного кода в прошивке и поиск аномального поведения и подозрительной активности.',
    'Firmware Embedded Monitoring Code': 'Код мониторинга внедряется в прошивку для контроля целостности прошивки и ее данных.',
    'Firmware Verification': 'Криптографическая проверка целостности прошивки.',
    'Peripheral Firmware Verification': 'Криптографическая проверка целостности прошивки периферийного устройства.',
    'System Firmware Verification': 'Криптографическая проверка целостности прошивки установленной системы.',
    'Operating System Monitoring': 'Программное обеспечение операционной системы для целей D3FEND включает в себя ядро и его функции управления процессами, драйверы оборудования, логику инициализации или загрузки. Оно также включает в себя другие ключевые системные демоны и их конфигурацию. Мониторинг или анализ этих компонентов на предмет несанкционированной активности представляет собой мониторинг операционной системы.',
    'Endpoint Health Beacon': 'Мониторинг состояния безопасности конечной точки путем периодической отправки сообщений о состоянии здоровья, отсутствие ответа на которые может свидетельствовать о том, что конечная точка была скомпрометирована.',
    'Input Device Analysis': 'Механизмы на уровне операционной системы для предотвращения неправомерной эксплуатации устройств ввода.',
    'Memory Boundary Tracking': 'Анализ стека вызовов на наличие адресов возврата, которые указывают на нестандартные области памяти.',
    'Scheduled Job Analysis': 'Анализ исходных файлов, процессов, файлов назначения или серверов назначения, связанных с запланированным заданием, для обнаружения несанкционированного использования планировщика задач.',
    'System Daemon Monitoring': 'Отслеживание изменений в состоянии или конфигурации критических процессов системного уровня.',
    'System File Analysis': 'Мониторинг системных файлов, таких как базы данных аутентификации, файлы конфигурации, системные журналы и исполняемые файлы системы, на предмет их модификации или несанкционированного доступа.',
    'Service Binary Verification': 'Анализ изменений в служебных бинарных файлах путем сравнения с источником истины.',
    'System Init Config Analysis': 'Анализ начальной конфигурации любого системного процесса.',
    'User Session Init Config Analysis': 'Анализ изменений в файлах конфигурации пользовательских сессий, таких как .bashrc или .bash_profile.',
    'Database Query String Analysis': 'Анализ запросов к базам данных для обнаружения SQL Injection.',
    'File Access Pattern Analysis': 'Анализ файлов, к которым обращается процесс, для выявления несанкционированной активности.',
    'Indirect Branch Call Analysis': 'Анализ косвенных переходов с целью обнаружения атак в стиле ROP.',
    'Process Code Segment Verification': 'Сравнение сегментов памяти «текст» или «код» с источником истины.',
    'Process Self-Modification Detection': 'Обнаружение процессов, которые модифицируют, изменяют или заменяют свой собственный код во время выполнения.',
    'Process Spawn Analysis': 'Анализ аргументов или атрибутов процесса для обнаружения несанкционированных процессов.',
    'Process Lineage Analysis': 'Выявление подозрительных процессов, выполняющихся на конечной точке, путем изучения происхождения и процесса, а также связанных с ними метаданных, таких как выполнение процесса, его продолжительность и порядок',
    'Script Execution Analysis': 'Анализ выполнения скрипта для обнаружения несанкционированных действий пользователя.',
    'Shadow Stack Comparisons': 'Сравнение стека вызовов в системной памяти с теневым стеком вызовов, поддерживаемым процессором, для определения несанкционированной активности шелл-кода.',
    'System Call Analysis': 'Анализ системных вызовов для определения несанкционированного поведения процесса.',
    'File Creation Analysis': 'Анализ свойств вызовов системных вызовов создания файлов.',
    'Authentication Event Thresholding': 'Сбор событий аутентификации, создание базового профиля пользователя и определение соответствия событий аутентификации базовому профилю.',
    'Authorization Event Thresholding': 'Сбор событий авторизации, создание базового профиля пользователя и определение соответствия событий авторизации базовому профилю.',
    'Credential Compromise Scope Analysis': 'Определение того, какие учетные данные могли быть скомпрометированы, путем анализа истории входов пользователей в конкретную систему.',
    'Domain Account Monitoring': 'Мониторинг наличия или изменений в учетных записях пользователей домена.',
    'Job Function Access Pattern Analysis': 'Обнаружение аномалий в шаблонах доступа пользователей путем сравнения их действий по доступу с поведенческими профилями, которые классифицируют пользователей по ролям, таким как должность, функции, отдел.',
    'Local Account Monitoring': 'Анализ учетных записей локальных пользователей для обнаружения несанкционированной активности.',
    'Resource Access Pattern Analysis': 'Анализ ресурсов, к которым обращается пользователь, с целью выявления несанкционированной активности.',
    'Session Duration Analysis': 'Анализ продолжительности пользовательских сессий с целью выявления несанкционированной активности.',
    'User Data Transfer Analysis': 'Анализ объема данных, передаваемых пользователем.',
    'User Geolocation Logon Pattern Analysis': 'Мониторинг геолокационных данных о попытках входа пользователей в систему и сравнение их с базовым профилем поведения пользователей для выявления аномалий в местоположении входа в систему.',
    'Web Session Activity Analysis': 'Мониторинг изменений в поведении пользователя в веб-сессии путем сравнения текущей активности в веб-сессии с базовым профилем поведения или каталогом заранее определенного вредоносного поведения.',
    'Executable Allowlisting': 'Использование цифровой подписи для проверки подлинности файла перед открытием.',
    'Executable Denylisting': 'Блокирование выполнения файлов на хосте в соответствии с определенными правилами политики приложений.',
    'Hardware-based Process Isolation': 'Предотвращение записи одного процесса в пространство памяти другого процесса с помощью аппаратных реализаций диспетчера адресов.',
    'IO Port Restriction': 'Ограничение доступа к портам ввода/вывода (IO) компьютера для ограничения доступа неавторизованных устройств.',
    'Kernel-based Process Isolation': 'Использование возможностей ядра для изоляции процессов.',
    'Mandatory Access Control': 'Управление доступом к ресурсам локальной компьютерной системы с помощью средств ядра.',
    'System Call Filtering': 'Настройка ядра на использование разрешающего или запрещающего списка для фильтрации вызовов API ядра.',
    'Broadcast Domain Isolation': 'Изоляция широковещательного домена ограничивает количество компьютеров, с которыми может связаться хост в своей локальной сети.',
    'DNS Allowlisting': 'Разрешение только одобренных доменов и их поддоменов.',
    'DNS Denylisting': 'Блокирование сетевого трафика DNS на основе таких критериев, как IP-адрес, доменное имя или тип DNS-запроса.',
    'Forward Resolution Domain Denylisting': 'Блокирование запросов на основе значения доменного имени.',
    'Hierarchical Domain Denylisting': 'Блокирование любого поддомена указанного доменного имени.',
    'Homoglyph Denylisting': 'Блокировка DNS-запросов, содержащих обманчивое сходство с легитимными доменными именами.',
    'Forward Resolution IP Denylisting': 'Блокирование значения IP-адреса ответа DNS-lookup.',
    'Reverse Resolution IP Denylisting': 'Блокирование обратного просмотра на основе значения IP-адреса запроса.',
    'Encrypted Tunnels': 'Зашифрованная инкапсуляция маршрутизируемого сетевого трафика.',
    'Network Traffic Filtering': 'Ограничение сетевого трафика, исходящего из любого места',
    'Inbound Traffic Filtering': 'Ограничение сетевого трафика, исходящего из недоверенных сетей и направленного на частный узел или контур.',
    'Outbound Traffic Filtering': 'Ограничение сетевого трафика, исходящего от частного узла или контура, направленного в недоверенные сети.',
    'Email Filtering': 'Фильтрация входящего почтового трафика по определенным критериям.',
    'Connected Honeynet': 'Служба-«приманка», система или среда, подключенная к корпоративной сети и имитирующая или эмулирующая определенную функциональность сети, не открывая полного доступа к проду.',
    'Integrated Honeynet': 'Практика установки приманок в контуре прода для приманки злоумышленников.',
    'Standalone Honeynet': 'Среда, созданная для приманки злоумышленников и изучения их поведения, которая не связана ни с каким контуром прода.',
    'Decoy File': 'Файл, созданный с целью обмануть злоумышленника.',
    'Decoy Network Resource': 'Развертывание сетевого ресурса с целью обмана злоумышленников.',
    'Decoy Persona': 'Создание фальшивой онлайн-личности для введения в заблуждение, обмана и взаимодействия со злумышленниками',
    'Decoy Public Release': 'Публичное обнародование информации с целью обмана злоумышленника.',
    'Decoy Session Token': 'Токен аутентификации, созданный с целью обмана злоумышленника.',
    'Decoy User Credential': 'Учетная запись, созданная с целью обмана злоумышленника.',
    'Account Locking': 'Процесс временного отключения учетных записей пользователей в системе или домене.',
    'Authentication Cache Invalidation': 'Удаление токенов или учетных данных из кэша аутентификации для предотвращения дальнейшего доступа к учетной записи, связанной с пользователем.',
    'Credential Revoking': 'Удаление набора учетных данных безвозвратно, чтобы предотвратить их использование для аутентификации.',
    'File Removal': 'Техника удаления файлов позволяет удалить вредоносные артефакты или программы из компьютерной системы.Техника удаления файлов позволяет удалить вредоносные артефакты или программы из компьютерной системы.',
    'Email Removal': 'Метод удаления электронной почты удаляет файлы электронной почты из системного хранилища.',
    'Host Shutdown': 'Запуск процедуры выключения хоста для завершения всех запущенных процессов.',
    'Host Reboot': 'Инициирование процедуры перезагрузки хоста для завершения всех запущенных процессов.',
    'Process Suspension': 'Приостановка запущенного процесса в компьютерной системе.',
    'Process Termination': 'Завершение запущенного процесса в компьютерной системе.',
    'Restore Network Access': 'Восстановление доступа объекта к компьютерной сети.',
    'Restore User Account Access': 'Восстановление доступа учетной записи пользователя к ресурсам.',
    'Unlock Account': 'Восстановление доступа учетной записи пользователя к ресурсам путем разблокировки.',
    'Reissue Credential': 'Выдача новых учетных данных пользователю, которые заменяют его старые учетные данные.',
    'Restore Configuration': 'Восстановление конфигурации программного обеспечения',
    'Restore Database': 'Восстановление данных в базе данных.',
    'Restore Disk Image': 'Восстановление ранее снятого образа диска.',
    'Restore File': 'Восстановление файла для доступа к нему субъекта.',
    'Restore Email': 'Восстановление электронной почты для доступа к ней.',
    'Restore Software': 'Восстановление программного обеспечения на хосте.',
};

const specials = {
  'Container Image Analysis' : 'Образы контейнеров - это отдельные коллекции исполняемого кода и содержимого, которые используются для наполнения контейнерной среды. Обычно они создаются либо путем сборки контейнера с нуля, либо путем создания поверх существующего образа, взятого из репозитория.\nНа протяжении всего рабочего процесса сборки контейнера образы должны сканироваться для выявления:\n\n    - устаревших библиотек,\n    - известных уязвимостей,\n    - или неправильных конфигураций, таких как небезопасные порты или разрешения.\n\nСканирование также должно обеспечивать возможность игнорировать ложные срабатывания при обнаружении уязвимостей, когда знающие специалисты по кибербезопасности сочли предупреждения неточными.\n\nОдин из подходов к реализации сканирования образов заключается в использовании контроллера допуска для блокирования развертывания, если образ не соответствует политике безопасности организации. \n\nКонтроллер допуска - это функция Container Orchestration, которая может перехватывать и обрабатывать запросы к API Container Orchestration до сохранения объекта, но после того, как запрос аутентифицирован и авторизован. Можно реализовать веб-хук для сканирования любого образа перед его развертыванием в оркестраторе. Этот контроллер допуска',
  'Configuration Inventory' : 'Организация получает информацию о конфигурации с помощью SNMP (записи MIB), WBEM (записи CIM), других протоколов или пользовательских сценариев и записывает эту информацию в хранилище, обычно известное как база данных управления конфигурацией (CMDB)',
  'Hardware Component Inventory': 'Администраторы собирают информацию об аппаратных устройствах, таких как периферийные устройства, сетевые карты, процессоры и устройства памяти, которые являются компонентами компьютеров в их архитектуре, используя различные инструменты администрирования и управления, которые запрашивают эту информацию. В некоторых случаях, когда такие запросы не поддерживаются или не предоставляют конкретную интересующую информацию, администратор может собирать эту информацию с помощью средств удаленного администрирования и системных команд, вручную или с помощью скриптов.',
  'Network Node Inventory': 'Администраторы собирают информацию о сетевых узлах в своей архитектуре с помощью различных инструментов администрирования и управления, которые запрашивают информацию о сетевых устройствах и узлах. В некоторых случаях, когда такие запросы не поддерживаются или не позволяют получить конкретную интересующую информацию, администратор может также собирать эту информацию с помощью методов перечисления сети, включая обнаружение узлов и сканирование на наличие активных портов и служб.',
  'Software Inventory': 'Администраторы собирают информацию о программных элементах в своей архитектуре с помощью различных инструментов администрирования и управления, которые запрашивают информацию об узлах сети. В ограниченных случаях, когда такие запросы не поддерживаются или не предоставляют конкретную интересующую информацию, администратор может также собирать эту информацию с помощью методов анализа сети для определения служб, отвечающих на узлах сети',
  'Active Logical Link Mapping': 'Активное отображение логических связей обеспечивает осведомленность о логических связях в сети путем отправки данных по сети для сбора информации о логических связях в сети.\n\nОбычно это достигается с помощью сетевой телеметрии, координируемой для управления и мониторинга сети, используется протокол обнаружения канального уровня, такой как LLDP, а информация собирается и агрегируется на более высоких уровнях с помощью прикладного протокола, такого как SNMP. Информация может опрашиваться программным обеспечением для управления сетью или конфигурироваться один раз, а затем передаваться от сетевых датчиков (или агентов).\n\nДругим способом установления сетевого соединения является отправка трафика с помощью такого инструмента, как traceroute, для определения логических путей через сетевую архитектуру.',
  'Service Dependency Mapping': 'Организация собирает и моделирует архитектурную информацию о сервисах и потребителях сервисов, а также отображает зависимости между сервисами.',
  'System Dependency Mapping': 'Организация собирает и структурирует архитектурную информацию о программном и аппаратном обеспечении, продуктах и отображает зависимости между системами, включая внутренние компоненты и зависимости каждой системы.',
  'Application Configuration Hardening': 'В настройках конфигурации приложения можно ограничить права доступа к приложению или отключить определенные уязвимые функции приложения.\n\n"Закалка" конфигурации приложения предполагает анализ не только самого приложения, но и среды, в которой оно работает, на предмет потенциальных уязвимостей.',
  'Dead Code Elimination': 'Мертвый код - это код, который считается непригодным для нормального выполнения программы. Мертвый код может быть создан путем добавления кода в условие, которое никогда не имеет значения true. Мертвый код необходимо удалять, так как при случайном или злонамеренном исполнении этот тип кода может привести к неожиданным результатам. \n\nИдентификация мертвого кода обычно выполняется алгоритмами, реализующими анализ потоков программы в поисках непригодного кода. Мертвый код удаляется  компиляторами с помощью флагов компилятора, например, "-fdce" используется для устранения мертвого кода.',
  'Exception Handler Pointer Validation': 'Когда процесс сталкивается с исключением, он вызывает обработчик исключений, чтобы справиться с ним. Метод, с помощью которого определяется обработчик исключений, зависит от операционной системы. Обработчик вызывается, даже если он является обработчиком исключений по умолчанию, чтобы завершить работу программы и вывести сообщение о том, что программа прекратила работу. В том случае, если не найден корректный обработчик исключений, программа не сможет продолжить работу в обычном режиме и может быть запрограммирована на завершение.\n\nВ Windows адрес записи регистрации исключений хранится в самом начале блока информации о потоке; на эту структуру указывает регистр GS.\n\nЗапись регистрации исключения содержит два указателя: указатель на следующую запись регистрации исключения, если этот обработчик не сможет обработать исключение, и указатель на обработчик.\n\nПереполнение буфера может перезаписать сохраненный указатель возврата в недопустимое место в памяти выполнения; это часто запускает цепочку обработчиков исключений, которая также может быть повреждена переполнением буфера. Хотя Process Exception Handler Validation не гарантирует, что указатель обработчика исключений или код обработчика исключений не был изменен, или что код обработчика исключений безопасен, эта техника гарантирует, что указатель, по крайней мере, является обработчиком исключений, который может быть вызван программой. \n\nС помощью Process Exception Handler Validation перед вызовом обработчика выполняется проверка обработчика исключений по списку допустимых обработчиков исключений. Если запрашиваемого обработчика нет в этом списке, могут быть задействованы другие техники, подобные тем, что используются в Process Eviction, например Process Termination для завершения текущего процесса или Executable Blacklisting для внесения в черный список потенциально уязвимого или неисправного исполняемого файла.',
  'Pointer Authentication': 'Аутентификация указателей (часто упоминается как PAC, хотя сама техника называется Pointer Authentication) - это функция безопасности, обеспечивающая защиту от злоумышленников с доступом к памяти для чтения/записи. Код аутентификации указателя (PAC) - это криптографический хэш или производная, вычисляемая по значению указателя и некоторой дополнительной контекстной информации, которая затем может предоставить криптографически сильную гарантию вероятности того, что указатель был подделан злоумышленником.\n\nХотя указатели имеют размер 64 бита, большинство систем имеют значительно меньшее виртуальное адресное пространство, оставляя неиспользуемые биты в указателях, которые могут хранить значение PAC, это может быть сделано для уменьшения требований к объему памяти. Одна из реализаций - в ARMv8.3-A. PAC вычисляется над 64-битным значением указателя и 64-битным значением контекста. Введены инструкции для работы с указателями: одна категория для вычисления и вставки PAC в указатель, другая категория для проверки указателя и аннулирования указателя, если PAC не проверяется, и третья категория для удаления указателя и восстановления исходного значения без проверки.\n\nВ стандарте ARM указан криптографический алгоритм QARMA-64 (разработанный Qualcomm) для вычисления подписи, хотя этот алгоритм не является обязательным. Архитектура предусматривает пять секретных 128-битных ключей аутентификации указателей: два для указателей инструкций, два для указателей данных и общий ключ для подписи больших блоков данных.',
  'Process Segment Execution Prevention': 'Во время выполнения процесса регистр указателей инструкций должен указывать только на адреса в сегменте кода (также называемом сегментом .text), поскольку это единственный сегмент, который должен содержать программный код.\n\nКогда эта техника обнаруживает попытку выполнения того, что было определено как неисполняемое, могут быть вызваны другие техники, подобные тем, что используются в Process Eviction, например Process Termination для завершения текущего процесса или Executable Blacklisting для внесения в черный список потенциально уязвимого или неисправного исполняемого файла.',
  'Segment Address Offset Randomization': 'Многие прикладные эксплойты основаны на том, что злоумышленник указывает место в памяти, которое указывает на данные или код, используемые злоумышленником. Если адреса меняются при каждом запуске программы, то злоумышленнику становится сложнее определить место, которое будет содержать код, который он хочет запустить.\n\nИмпортированные модули могут быть аналогичным образом перераспределены, если их адреса памяти по умолчанию конфликтуют с другими модулями, в процессе, известном как «rebasing». Так же как не весь код создан для участия в ASLR, не все модули могут быть переразмещены; вместо этого модули должны указывать, реализована ли в них поддержка переразмещения. Информация о перемещении исполняемого файла обычно хранится в сегменте «.reloc» - каждый из адресов, на которые указывает этот сегмент, увеличивается на величину смещения. (Альтернативным методом перемещения было бы добавление суммы в глобальную переменную каждый раз - что привело бы к меньшим накладным расходам при загрузке модуля, но к большим при каждом обращении. Другая реализация может содержать код для деференцирования каждого изменяемого участка памяти на лету, так что все ссылки не нужно обновлять.',
  'Stack Frame Canary Validation': 'Такая защита должна применяться во время компиляции или с помощью патча к бинарным файлам программы. Проверка Stack Frame канарейки вставляет инструкции в пролог и эпилог нужных функций. В прологе значение канарейки, обычно имеющее тот же размер, что и размер регистра, хранится в системе записи и в стеке. Как правило, канарейка загружается туда, где ее адрес в памяти находится чуть ниже адреса сохраненного указателя инструкции и базового указателя. В эпилоге значение канарейки, хранящееся в стеке и, сравнивается со значением канарейки в системе записи. Если значения отличаются, могут быть задействованы другие методы, подобные тем, что используются в Process Eviction, например Process Termination для завершения текущего процесса или Executable Blacklisting для внесения в черный список потенциально уязвимого или неисправного исполняемого файла.\n\nПроверка кадра стека обычно используется для обнаружения потенциальной фальсификации сохраненного значения регистра в стеке до его восстановления. Примерами регистров, значения которых обычно сохраняются в стеке, являются указатель инструкций и указатель базы.\n\nКанарейка должна храниться между местом вероятного начала выхода за пределы буфера и защищаемыми данными, так как в случае увеличения размера буфера она будет перезаписывать защищаемые данные. \n\n\В большинстве процессорных архитектур, включая x86, x64 и ARM, операция «push» для сохранения данных в стеке увеличивает стек в сторону более низкого адреса памяти. Так как в этих архитектурах сохраненные значения регистров сохраняются в стеке в момент времени, непосредственно предшествующий освобождению места для локальных переменных функций, сохраненные значения регистров имеют более высокий адрес, чем локальные переменные функций. Значения с возрастающими индексами буфера записываются по возрастающим адресам памяти; поэтому перезапись в буфере локальных переменных может привести к перезаписи сохраненных значений регистров, и для обнаружения перезаписи будет полезен стековый канатик между ними.\n\nВ некоторых других процессорных архитектурах, таких как B5000, стек растет в сторону увеличения адресов памяти, а в некоторых архитектурах, таких как System Z и RCA1802A, направление стека можно выбрать. Если стек растет в сторону увеличения адресов памяти, то, хотя такая архитектура по своей сути обеспечивает большую защиту от перезаписи сохраненного регистра, другие данные, включая локальные переменные функций, могут быть перезаписаны.',
  'Certificate Pinning': 'Закрепление позволяет связать доверенную копию сертификата или открытого ключа с сервером и тем самым снизить вероятность того, что часто посещаемые сайты будут подвергаться атакам типа «человек посередине». Сертификаты или открытые ключи могут быть закреплены после установления доверенного соединения или предварительно загружены в приложение, что является предпочтительным методом для мобильных приложений.\n\nЗакрепление может осуществляться в виде закрепления сертификата или открытого ключа.',
  'Credential Rotation': 'Серверы управления с корпоративными политиками контроля учетных записей предоставляют возможность изменять или сбрасывать пароли для учетных записей. Некоторые организации периодически меняют учетные данные, чтобы снизить риск кражи учетных данных.',
  'Multi-factor Authentication': 'При входе в учетную запись пользователи предъявляют несколько учетных данных, которые относятся к разным категориям: что-то, что вы знаете (пароль или PIN-код), что-то, что у вас есть (смарт-карта или телефон), или что-то, чем вы обладаете (отпечаток пальца).',
  'One-time Password': 'Когда пользователь инициирует аутентификацию, его просят ввести одноразовый пароль, часто в дополнение к другим учетным данным, таким как традиционный пароль или смарт-карта. Одноразовый пароль может быть из заранее предоставленного списка, отправлен по такому каналу, как SMS или HTTPS в приложение, или сгенерированный токен.\n\nВ случае физического токена, который генерирует одноразовые пароли постепенно на основе прошедшего времени, устройство токена не обязательно должно быть подключено к Интернету. В различных вариантах реализации администратор системы или пользователь с дополнительной верификацией может при необходимости корректировать расхождение во времени между токеном и системой верификации.',
  'User Account Permissions': 'Рекомендации по надежности паролей включают увеличение длины пароля, разрешение на использование паролей, содержащих символы ASCII или Unicode, и требование к системам проверять новые пароли по спискам часто используемых или взломанных паролей.',
  'Message Authentication': 'Цифровые подписи используются для проверки того, что сообщение получено от предполагаемого отправителя. В электронной почте для цифровой подписи сообщений обычно используется протокол Secure/Multipurpose Internet Mail Extensions (S/MIME). Для создания цифровой подписи создается хэш-значение сообщения отправителя и шифруется с помощью его закрытого ключа. Сообщение и цифровая подпись отправляются получателю, где открытый ключ отправителя используется для расшифровки цифровой подписи и вычисления хэша сообщения. Вычисленный хэш сравнивается с хэшем полученного сообщения, и любая разница в значениях хэша означает, что сообщение не исходило от отправителя и было предупреждено при передаче.',
  'Message Encryption': 'Асимметричное шифрование обычно выполняется с помощью сертификатов открытого и закрытого ключей, основанных на стандарте X.509. Отправитель шифрует сообщения с помощью открытого ключа получателя, а получатель расшифровывает сообщение с помощью своего закрытого ключа. Для реализации шифрования сообщений можно использовать такие стандарты, как S/MIME (Secure/Multipurpose Internet Mail Extensions) и PGP.\n\nСимметричное шифрование использует один и тот же криптографический ключ для отправителя и получателя для шифрования и расшифровки сообщения. Асимметричные протоколы обмена ключами, такие как Диффи-Хеллман, могут использоваться для передачи криптографического ключа получателю.',
  'Transfer Agent Authentication': 'Аутентификация агента передачи может быть выполнена различными способами в зависимости от протокола. В электронной почте для проверки принадлежности домена отправителя используются такие протоколы, как Sender Policy Framework (SPF), Domain Key Identified Email (DKIM) или Domain-based Message Authentication Reporting and Conformance (DMARC).',
  'Driver Load Integrity Checking': 'Эта техника может быть реализована несколькими способами:\n\n  - Агент безопасности уровня ядра, установленный на хост-машине, гарантирует, что драйвер, связанный с агентом, будет первым в порядке инициализации. Зависимая DLL, связанная с драйвером, настроена на обработку перед другими зависимыми DLL и выполняет ряд операций, чтобы драйвер, связанный с агентом безопасности, был инициализирован первым.\n\n   - Компоненты ядра могут быть подписаны сертификатом, полученным третьей стороной, для проверки источника компонента и того, не был ли он изменен. При подписании компонент включает блок подписи, реализованный в виде хэш-значения заголовка компонента, а также цепочку сертификатов. Данные о подписи и сертификате обычно добавляются до того, как компонент ядра будет распространен среди пользователей.',
  'File Encryption': 'Для шифрования файлов используется либо один ключ для шифрования и дешифрования, либо отдельные ключи. Шифрование с одним ключом - это симметричное шифрование, а использование двух разных ключей - асимметричное шифрование.',
  'TPM Boot Integrity': 'В процессе загрузки загрузочный блок BIOS (который при включенной защите является корнем доверия для измерений) измеряет компоненты загрузки (микропрограмму, ПЗУ). TPM хэширует эти измерения и сохраняет хэши в регистрах конфигурации платформы (PCR). При последующей загрузке эти хэши предоставляются верификатору, который сравнивает сохраненные измерения с измерениями новой загрузки. Целостность компонентов загрузки гарантируется, если они совпадают.\n\nУдостоверение безопасной загрузки происходит, когда проверяющий объект запрашивает цитату, которая представляет собой конкатенацию запрошенных значений PCR, хэшированных и подписанных уникальным ключом RSA TPM. Подпись TPM заслуживает доверия, поскольку закрытый ключ надежно хранится в аппаратном обеспечении и никогда не покидает TPM.',
  'Dynamic Analysis': 'Анализ взаимодействия части кода с системой во время выполнения кода в контролируемой среде, такой как песочница, виртуальная машина или симулятор. Это позволяет выявить естественное поведение части кода, не требуя его разборки.',
  'File Content Analysis': 'Анализ фрагмента кода без его выполнения в «песочнице», виртуальной машине или симуляторе. Паттерны или сигнатуры в файле могут указывать на тип программного обеспечения, в том числе на наличие вредоносного ПО.',
  'File Content Rules': 'Правила, часто называемые сигнатурами, используются как для общего, так и для целевого обнаружения вредоносных программ. Правила обычно выражаются на языке, специфичном для конкретной области (DSL), а затем развертываются в программном обеспечении, которое сканирует файлы на предмет совпадений. Правила разрабатываются и широко распространяются коммерческими поставщиками, или же они разрабатываются и развертываются корпоративными группами безопасности для борьбы с узконаправленными или специальными вредоносными программами. Концептуально существуют общедоступные и частные наборы правил. В обоих случаях используется одна и та же технология, но они предназначены для обнаружения разных типов потенциальных угроз.',
  'File Hashing': 'Для этой техники требуется список хэшей, с которыми нужно сравнить файл.',
  'Homoglyph Detection': 'Омоглиф в данном контексте - это обманчивая строка или слово, которое выглядит как достоверное слово, но состоит из разных символов, например: goooogle.com против google.com. Это часто встречается в фишинговых атаках и атаках с использованием опечаток, когда человек использует омоглиф с помощью социальной инженерии.',
  'Identifier Activity Analysis': 'Анализ активности идентификаторов - это процесс получения идентификаторов, как правило, известных вредоносных объектов, и определения артефактов, которые взаимодействовали с этими объектами.\n\nСуществует множество открытых и закрытых хранилищ идентификаторов, которые представляют собой индикаторы компрометации. Например, VirusTotal содержит хэш-сигнатуры вредоносных программ и IP-адреса, используемые злоумышленниками. Специалисты по защите могут искать эти индикаторы компрометации в собственных системах, чтобы получить информацию об активности вокруг идентификатора.',
  'URL Analysis': 'URL-адреса могут содержать компоненты, например:\n\n   - схема\n   - информация о пользователе\n   - имя хоста\n   - порт\n   - путь\n   - запрос\n   - фрагмент\n\nЭти компоненты используются в качестве признаков в алгоритмах анализа.\n\nКонтекстная информация об URL-адресе, такая как место его вставки (например, электронные письма, файлы, сетевые протоколы), информация о заголовке, пути, местоположении и происхождении, а также информация о содержимом, возвращаемом по запросу URL-адреса, может быть включена в аналитику для анализа URL-адреса. Например, если URL-адрес указывает на файл .pdf, а на самом деле возвращается исполняемый файл, сочетание этих двух частей информации указывает на подозрительную активность.\n\nДополнительные методы включают:\n\n  - Извлечение таких характеристик URL-адреса, как длина доменного имени, соотношение последовательных согласных, процент цифр в домене и количество гласных. Значения каждого признака объединяются для получения оценки URL-адреса.\n  - Определение вероятности появления символа в URL с учетом двух предшествующих символов. Например, для сайта google.com определяется вероятность появления буквы «g» в начале слова, вероятность появления буквы «o» после «g», вероятность появления буквы «o» после «g» и «o» и так далее. Для определения вероятности используется словарь или список известных хороших доменов. Вероятности перемножаются, чтобы получить оценку URL.\n\nАнализ URL-адресов может инициировать последующие аналитические исследования, такие как анализ файлов',
  'Sender MTA Reputation Analysis': 'Рейтинг доверия агента передачи сообщений (MTA) отправителя может рассматриваться как показатель уровня риска безопасности и/или уровня доверия, связанного с MTA отправителя в заголовке электронной почты.\n\nХарактеристики, учитываемые при определении рейтинга доверия, могут включать:\n\n  - продолжительность взаимодействия MTA\n  - Количество доменов-отправителей, отправляющих электронные письма с MTA\n  - Количество получателей, которым MTA отправляет электронные сообщения\n  - Количество сообщений электронной почты, полученных от данного MTA\n  - Количество ответов на электронные письма, полученных от этого MTA\n\nНапример, более высокие значения продолжительности взаимодействия MTA или количества электронных писем, полученных от MTA, могут привести к более высокому рейтингу доверия. Рейтинг доверия классифицирует MTA-отправителя как неоцененный, нейтральный, доверенный, подозрительный или вредоносный.',
  'Sender Reputation Analysis': 'Рейтинг доверия отправителя может рассматриваться как показатель уровня риска безопасности и/или уровня доверия, связанного с отправителем. При определении рейтинга доверия учитываются следующие характеристики:\n\n  - продолжительность времени, в течение которого отправитель отправлял электронные сообщения\n  - количество получателей, с которыми взаимодействует отправитель\n  - Соотношение количества сообщений, отправленных отправителем и предприятием\n  - Соотношение открытых и неоткрытых сообщений отправителя\n  - Количество электронных писем, полученных от данного отправителя\n  - Количество писем, полученных от этого отправителя\n  - Количество не открытых писем от этого отправителя\n  - Количество не открытых писем от этого отправителя, содержащих вложения\n  - Количество не открытых писем от этого отправителя, содержащих URL\n  - Количество писем, отправленных этому отправителю\n  - Количество ответов, полученных от этого отправителя.\n\nБолее высокие значения количества адресатов, с которыми взаимодействовал отправитель, или количества писем, полученных от отправителя, например, приводят к более высокому рейтингу доверия. Рейтинг доверия может классифицировать отправителя как неоцененного, нейтрального, доверенного, подозрительного или вредоносного.',
  'Administrative Network Activity Analysis': 'Такие сетевые протоколы, как RDP, IPMI, SSH, SNMP, VNC, MOSH, NX, TeamViewer, SPICE, PCoIP и другие, используются системными администраторами для удаленного управления серверами. Специалисты по защите отслеживают административную сетевую активность, чтобы определить, не является ли использование удаленных протоколов вредоносным. Злоумышленники могут злоупотреблять административными протоколами и использовать их для получения первоначального доступа к различным конечным устройствам. Например, злоумышленник с действительными учетными данными удаленно подключается к серверу по SSH или RDP и пытается смешаться с существующим трафиком системных администраторов. Отслеживая активность трафика, можно обнаружить, когда протоколы ведут себя иначе, чем при известной базовой активности системного администрирования.',
  'Byte Sequence Emulation': 'Байты анализируются как инструкции машинного кода, и отмечаются такие инструкции, которые являются общим компонентом известного шеллкода, например, чтение из таблицы адресов памяти и системные вызовы функций, которые отключают защиту или выполняют код. Например, инструкция x86 b0 0b: mov $11, %ax, без дальнейших изменений регистра %ax, за которой следует cd 80: syscall, выполняет системный вызов execve() в ядре Linux, который заменяет текущий процесс на другой указанный - это обычное действие в шелл-коде, поэтому данная последовательность будет отмечена.\n\nЭта техника обнаруживает шелл-код независимо от того, приведет ли он к переполнению буфера в целевом бинарном файле или нет.\n\nЕсли последовательность байтов содержит последовательность, аналогичную той, что используется во вредоносном шелл-коде, вся последовательность байтов помечается, и может быть вызвана последующая техника.',
  'Certificate Analysis': 'Анализ сертификата гарантирует, что элементы данных сертификата актуальны и закреплены в рамках известной схемы доверия. При анализе используются центры сертификации, списки отзыва и защищенные журналы сторонних источников. Анализ включает в себя обнаружение поддельных серверов, фишинговых доменов и поддельных сертификатов.\nСертификаты TLS рассчитаны на истечение срока действия, чтобы обеспечить регулярную смену криптографических ключей. Срок действия сертификатов в пути доверия также истекает, что может привести к разрыву цепочки доверия. Это означает, что даже если сертификат сервера обновляется правильно, срок действия промежуточных сертификатов может истечь, и цепочка доверия не будет поддерживаться. Это может привести к недоступности служб.',
  'Active Certificate Analysis': 'Анализ сертификатов серверов с помощью активных методов для обнаружения неправильной конфигурации или подделки сертификатов с использованием элементов сертификата, центров сертификации и подписей.',
  'Passive Certificate Analysis': 'Сертификаты анализируются вне TLS-соединения с сервером с помощью сторонних журналов безопасного обновления, анализа доменных имен и аналитики.',
  'Client-server Payload Profiling': 'Профилирование полезной нагрузки запросов и ответов, поступающих от нескольких клиентов к одному серверу, для получения базовых характеристик. При этом могут учитываться размеры запросов/ответов, энтропия, частота и ритм. И, наконец, выявление отклоняющихся от нормы параметров, поскольку они могут указывать на доставку вредоносной полезной нагрузки и последующую эксплуатацию сервера.',
  'Connection Attempt Analysis': 'Мониторинг последовательно передаваемого трафика\n\nЗаключается в пассивной проверке сетевого трафика с помощью анализаторов протоколов приложений, наблюдающих за сетевой активностью, такой как объем отправленных/полученных пакетов, атрибуты TCP-сессий и информация о соединениях между хостами (время начала, хост источника/назначения, службы и т. д.). Затем с помощью сопоставления шаблонов выявляется трафик, который, по всей видимости, является нелегетимным для узлов сети.',
  'DNS Traffic Analysis': 'Эта техника может быть реализована несколькими способами.\n\n  - Например, аналитика определяет, было ли доменное имя сгенерировано с помощью алгоритма. Алгоритмы генерации доменов (DGA) иногда используются для автоматического создания доменных имен, которые будут ссылаться на инфраструктуру C2, без непосредственного кодирования соответствующих доменов во вредоносный код.\n  - Другой метод анализирует информацию о посещенных доменах, в том числе о том, превышает ли длина доменного имени общепринятую длину, посещался ли домен с динамическим DNS, посещался ли домен с быстрым потоком данных и посещался ли недавно созданный домен. Эти факторы используются для определения оценки, и если эта оценка превышает определенный порог, генерируется предупреждение.\n  - Собранные образцы вредоносного ПО могут быть выполнены в виртуальном окружении, чтобы определить сетевые домены, к которым подключались во время выполнения. Затем эти сетевые домены генерируются в сигнатуры для идентификации плохих доменов на других узлах.\n\nЭта техника не проверяет содержимое, размещенное на домене.',
  'File Carving': 'Программа пересборки потоков протоколов воссоздает направленный поток байтов, анализируя перехваченные сетевые пакеты. После сборки потока применяется сопоставление шаблонов, чтобы определить, содержит ли он интересующий вас файл. Интерес представляют файлы различных форматов: исполняемые, архивные или документальные. После захвата файла он обрабатывается стандартными методами анализа файлов. Примеры сетевых протоколов включают HTTP, SMTP, FTP, HTTP/2 и TLS/HTTP/Dropbox.',
  'Inbound Session Volume Analysis': 'Сетевые устройства настроены на предупреждение об определенных пакетах, которые обычно участвуют в DoS-атаках. К типичным пакетам относятся ICMP-пакеты и SYN-запросы, которые обычно используются для «переполнения» сетей. Период выборки используется для определения временного окна, в котором может быть измерено количество идентифицированных пакетов. Если количество собранных пакетов превышает заданный предел, генерируется предупреждение.',
  'IPC Traffic Analysis': 'Межпроцессное взаимодействие позволяет приложениям или потокам обмениваться данными. Это может происходить на одном или нескольких компьютерах. Мониторинг IPC в вашей среде может выявить аномальную или вредоносную активность. IPC может выполняться как внутри одного компьютера, так и между несколькими компьютерами удаленно через сетевые протоколы. Таким образом, существует множество способов сбора и мониторинга этих обменов между процессами. Анализатор сетевых протоколов может отслеживать и анализировать сетевой трафик SMB для записи активности системы. Агент мониторинга на базе хоста может отслеживать активность IPC в пределах одного хоста, чтобы найти отклонения от стандартного использования.',
  'Network Traffic Community Deviation': 'Хосты/пользователи в компьютерной сети анализируются для выявления групп хостов, которые часто общаются между собой. Затем можно обнаружить будущие связи между группами, которые обычно не общаются. Например, если группа узлов, общающихся в поддержку финансового подразделения компании, вдруг начнет обращаться к серверу кода, доступ к которому обычно имеют только инженеры, это может свидетельствовать о несанкционированной активности.',
  'Per Host Download-Upload Ratio Analysis': 'Совокупные соотношения загрузки и выгрузки на основании метаданных используются для определения общего уровня для данного узла за определенный период времени, например за три часа, один день, одну неделю и т. д. Аномалии, выявленные при превышении порогового значения, вызывают алерт.',
  'Protocol Metadata Anomaly Detection': 'Метаданные сетевых протоколов сначала собираются и обрабатываются в режиме реального времени или постфактум. Они могут включать информацию о заголовках пакетов или информацию о сеансе (например, время между запросами/ответами). Затем метаданные группируются на основе общих характеристик, и эти группы сравниваются друг с другом. Если конкретные данные значительно отличаются от других, генерируется предупреждение, идентифицирующее сетевое событие как аномальное. Аномальная активность может указывать на несанкционированную деятельность.',
  'Relay Pattern Analysis': 'Для создания моста между защищенной сетью и внешней сетью передатчик может использовать различные технологии проксирования, пересылки или маршрутизации. Защитная аналитика для обнаружения передающей сети может сравнивать сетевые сессии между несколькими хостами. Хосты, имеющие почти одинаковую сетевую статистику, могут быть частью сети ретрансляции. Статистика может включать количество байтов, отправленных в и из, время начала сеанса, размер пакетов или данные о времени прибытия пакетов.',
  'Remote Terminal Session Detection': 'Внешний злоумышленник получает удаленный контроль над хостом в сети компании или организации и вручную управляет наступательными методами. В этой технике анализируются нестандартные терминальные сессии и аномальное поведение. Обнаружение аномального поведения включает в себя анализ шаблонов ввода пользователя в сеансе реального времени, вывод клавиатуры и проверку пакетов.',
  'RPC Traffic Analysis': 'Удаленный вызов процедур (RPC) позволяет одному компьютеру выполнить определенную функцию на другом компьютере, как если бы это был локальный процесс приложения. Существует множество спецификаций и реализаций RPC. Возможности RPC могут быть использованы злоумышленниками для достижения различных тактических целей, включая выполнение, сохранение, первоначальный доступ и т. д. Прокси-серверы RPC могут использоваться для сбора и хранения трафика. RPC может выполняться через сетевые сокеты или именованные каналы.\n\nПример несанкционированного поведения:\n  удаленный запуск или планирование процессов\n  Удаленное изменение конфигурации системы\n  несанкционированное чтение файлов',
  'File Integrity Monitoring': 'В Windows и Unix существует ряд инструментов, которые могут отслеживать определенные файлы в системе и генерировать предупреждения, если какие-либо артефакты были созданы, изменены или удалены. Для этого они сравнивают текущие артефакты с предыдущим снимком.\n\nUnix - В системах Unix есть инструмент проверки целостности файлов под названием Tripwire. Tripwire сначала инициализирует базу данных, которая служит основой для сравнения, а затем сканирует систему, чтобы сравнить состояние текущей файловой системы с исходной базой данных. Кроме того, пользователи могут определять политики, в которых указываются потенциальные нарушения.\n\nWindows - в Microsoft Azure можно включить мониторинг целостности файлов, который позволяет отслеживать создание, удаление и изменение определенных файлов и ключей реестра.',
  'Firmware Behavior Analysis': 'Анализ прошивки обеспечивает защиту, гарантируя, что установленная микропрограмма не была подделана или изменена. Анализ прошивки применяется к изменяемым микропрограммам и неизменяемой памяти только для чтения (ПЗУ).\n\nВстроенное программное обеспечение в развернутых сетевых устройствах обычно не анализируется и не отслеживается на предмет уязвимостей и, следовательно, подвержено потенциальным атакам. Данная методика использует известные и измеренные поведенческие атрибуты, включая временные атрибуты, анализируемой микропрограммы на развернутых устройствах.\n\nПоведенческий метод, использующий известные измерения времени, может использовать результаты измерения времени из протокола вызова и ответа для обнаружения присутствия вредоносного ПО во встроенной прошивке. Выполняются измерения времени работы прошивки, характерные для установленного устройства, и используются в функции проверки.\n\nИсходный образ прошивки модифицируется путем внедрения в код программного компонента мониторинга. Внедренные программные компоненты позволяют реализовать в прошивке корень доверия, протокол вызова и ответа.\n\nВызов-ответ выдается и включает в себя nonce, чтобы повторы были недопустимы. Микропрограмма вычисляет контрольную сумму по всей памяти, включая nonce, и возвращает результат. Система проверки сравнит вычисленную контрольную сумму и время, затраченное на вычисление контрольной суммы, чтобы определить, была ли изменена прошивка.',
  'Firmware Embedded Monitoring Code': 'Прошивка развернутых сетевых устройств обычно не отслеживается на предмет вредоносных изменений. Данная методика позволяет встроить программный компонент безопасности в прошивку, что обеспечивает мониторинг практически в режиме реального времени. Код обработки исключений в прошивке обычно используется для раскрытия всех обнаруженных уязвимостей.\n\nВнедренные программные компоненты обеспечивают функцию, аналогичную системам обнаружения вторжений в прошивке, обнаруживая несанкционированные модификации. Целостность статического кода и данных встроенного ПО постоянно контролируется в размещенных устройствах. Сравнение производится с такими контролируемыми элементами, как адреса и сегменты данных прошивки. Страницы памяти сканируются, и при обнаружении модификации программный компонент может заблокировать страницу. Это защитит от последующих попыток модификации прошивки. Программный компонент может использовать код обработки исключений и таким образом раскрыть точный адрес измененной памяти.\n\nВнедряемые программные компоненты устанавливаются в процессе создания образа прошивки. Предполагается, что внедряемое программное обеспечение знает как встроенный код, так и текущее состояние выполнения программы-хоста. Инжектируемое ПО будет отслеживать и предупреждать о потенциально подозрительной активности в режиме реального времени. Инжектируемый код запускается вместе со встроенным кодом на хосте. Инжектируемое программное обеспечение работает как независимая сущность и не зависит от хост-программы.\n\nНаконец, эта техника может реализовывать другие методы противодействия как часть своих аналитических процессов. При необходимости они должны быть идентифицированы путем прямой ссылки на другие методы противодействия.',
  'Firmware Verification': 'Для системных и периферийных микропрограмм вычисляются криптографические хэш-значения. Их сравнивают с предварительно вычисленными хэш-значениями для идентифицированной микропрограммы. Несоответствие может указывать на то, что прошивка была подделана или обновлена неактуальной версией, что свидетельствует о неправильной конфигурации системы.',
  'Peripheral Firmware Verification': 'Периферийное прошивка собирается и анализируется на хосте периодически или по требованию. Эта информация может быть собрана для будущих сравнений.\n\nИзменения хэш-значений прошивки могут свидетельствовать о вмешательстве или о том, что образы прошивки не поддерживаются в соответствии с текущими базовыми версиями, или даже о развертывании известных уязвимых версий.',
  'System Firmware Verification': 'Для прошивки системы вычисляются криптографические хэш-значения. Они сравниваются с предварительно вычисленными хэш-значениями прошивки, чтобы определить, была ли прошивка подделана.\n\nЕсли проверка прошивки системы не удается, обычно вызывается набор заранее определенных вариантов реагирования. Данные варианты могут указывать системе на отключение некоторых устройств или операций.',
  'Operating System Monitoring': '"Операционная система (ОС) - программное обеспечение, управляющее компьютерами и позволяющее запускать на них прикладные программы."\n\nМетоды мониторинга операционной системы имеют различные реализации, включая встроенные модули ядра, сторонние привилегированные системные демоны или даже стандартные средства системного администрирования, входящие в состав операционной системы.',
  'Endpoint Health Beacon': 'Конечные точки настроены на периодическую генерацию и передачу защищенного сигнала о состоянии, который доставляется по заданному расписанию и содержит информацию о состоянии конечной точки. Информация о состоянии может включать сведения о программном обеспечении (версия, конфигурация и т. д.), идентификацию конечной точки (MAC, IP-адрес, идентификатор машины) или другую информацию о конфигурации аппаратного/программного обеспечения. Прерывание сигнала о состоянии может свидетельствовать о том, что конечная точка скомпрометирована.',
  'Input Device Analysis': 'Методы усиления устройств ввода фильтруют определенные команды или отключают соответствующие функции операционной системы.',
  'Memory Boundary Tracking': 'Эта техника отслеживает признаки того, что возвращаемый адрес находится за пределами памяти, ранее выделенной для объекта (т. е. функции, модуля, процесса или потока). Если это так, то код, на который указывает возвращаемый адрес, рассматривается как вредоносный.',
  'Scheduled Job Analysis': 'Запланированное выполнение заданий может быть использовано злоумышленниками для сохранения, удаленного выполнения или получения привилегий. Детали запланированного задания, такие как связанные исходные файлы, процессы, файлы назначения или серверы назначения, сначала идентифицируются и анализируются, а затем сравниваются с базой данных сигнатур антивирусных программ, белым списком или сервером репутации. Например, файл, связанный с запланированным заданием, которое должно быть выполнено в определенное время, или удаленный сервер, к которому осуществляется доступ как к части запланированного задания, сравнивается с базой данных сигнатур, белым списком или сервером репутации, и если обнаруживается совпадение, выполнение запрещается и генерируется предупреждение.\n\nПомимо традиционных заданий по расписанию, триггеры можно настроить на выполнение определенной команды после обнаружения конкретного события в системе, как, например, в случае с подписками на события WMI в Windows.',
  'System Daemon Monitoring': 'Злоумышленники могут манипулировать системными настройками или службами, чтобы отключить ведение системных журналов или мониторинг средств и событий безопасности. Брандмауэр и антивирусные службы - популярные цели для злоумышленников. Отключение системных журналов также позволит злоумышленникам остаться незамеченными. Анализ журналов, реестров и мониторинг процессов помогают защитникам обнаружить признаки взлома. Два возможных подхода - мониторинг усиленных системных служб или отслеживание обновлений реестра на предмет изменения параметров безопасности.',
  'System File Analysis': 'Эта техника обеспечивает целостность файловых ресурсов, принадлежащих системе. Системные файлы могут влиять на поведение ниже уровня пользователя.',
  'Service Binary Verification': 'Приложения системных служб могут создаваться в процессе установки операционной системы или сторонними приложениями, установленными с правами администратора. Эти службы имеют точку входа в виде некоторого исполняемого файла - бинарного файла или сценария. Злоумышленники иногда модифицируют эти исполняемые файлы, чтобы запустить свой собственный код. Анализ изменений в таких файлах может выявить несанкционированную активность.',
  'Database Query String Analysis': 'В некоторых реализациях используются программные хуки для перехвата вызовов функций, связанных с операциями запроса к базе данных. Другие реализации могут перехватывать или собирать сетевой трафик. Затем строка запроса к базе данных извлекается и анализируется с помощью различных методов, например:\n\n  - обнаружение специфических административных SQL-команд\n  - Аномальные последовательности команд по сравнению со статистической базой.\n  - Аномальные команды для определенной роли пользователя.',
  'File Access Pattern Analysis': 'Вредоносные программы, модифицирующие файлы, такие как wipers и ransomware, обнаруживаются путем выявления шаблонов доступа к файлам, которые ассоциируются с вредоносным процессом. К примерам шаблонов доступа к файлам относятся доступ к большому количеству файлов, доступ к файлам нескольких типов, доступ к файлам, расположенным в нескольких местах каталога, а также копирование файла и шифрование содержимого этого файла в копии.',
  'Indirect Branch Call Analysis': 'Эта техника используется для обнаружения злоумышленников, пытающихся использовать и выполнить код в стеке вызовов целевой системы с помощью обратно-ориентированного программирования (ROP). Современные процессоры, имеющие возможность вести список косвенных переходов, например, запись последних переходов (LBR) компании Intel, могут быть использованы для отслеживания и анализа косвенных переходов, которые указывают на вредоносную активность.\n\nЧтобы сократить количество анализируемых косвенных переходов до управляемого набора, предполагается, что вредоносная активность ROP будет связана с использованием системных вызовов. В данной методике наблюдаются косвенные переходы, которые являются частью путей, ведущих к системным вызовам, все остальные игнорируются. существующие кусочки исполняемого кода, часто называют гаджетами, и они часто используются в ROP-атаках. Для данной техники интерес представляют косвенные переходы, которые включают в себя переход из пользовательского пространства в пространство ядра.',
  'Process Code Segment Verification': 'Сегмент кода процесса - это исполняемая часть памяти компьютера, выделенная определенному процессу. Верификация сегмента кода процесса реализует проверку для сравнения сегмента кода процесса с некоторым ожидаемым значением.',
  'Process Self-Modification Detection': 'Агент безопасности, установленный на хост-машине, перехватывает вызовы API между процессом и операционной системой. Перехваченные вызовы API затем сравниваются с сигнатурами/шаблонами атак для выявления вызовов API, которые изменяют исполняемую память или адрес точки входа приостановленного дочернего процесса. К шаблонам атак относятся:\n\n   - Исполняемый код приостановленного дочернего процесса, удаленный из памяти одним или несколькими вызовами API.\n   - Новый исполняемый код, внедренный и/или загруженный в память приостановленного дочернего процесса одним или несколькими вызовами API.\n   - Исполняемый код, модифицированный одним или несколькими вызовами API.\n   - Значение указателя следующей инструкции в памяти, измененное одним или несколькими вызовами API.',
  'Process Spawn Analysis': 'Атрибуты процесса устанавливаются, когда операционная система запускает новый процесс. Эти атрибуты анализируются на предмет наличия или отсутствия определенных значений или шаблонов.\n\nИнтерес представляют следующие атрибуты:\n   - пользователь\n   - имя процесса\n   - путь к изображению\n   - содержимое системы безопасности',
  'Process Lineage Analysis': 'Методы анализа дерева процессов собирают информацию о том, как был инициирован процесс, чтобы определить, является ли он вредоносным. Например, если процесс не был инициирован при загрузке или не был инициирован другим процессом, этот процесс определяется как подозрительный. Кроме того, если новый процесс был запущен до процесса, инициированного устройством (например, во время загрузки), и этот новый процесс не был инициирован пользователем (что можно определить, изучив параметры процесса, такие как тип процесса, его создатель, источник и т. д.), процесс идентифицируется как подозрительный.',
  'Script Execution Analysis': 'Программное обеспечение, установленное на хосте, подключается к скритовому движку, чтобы перехватывать команды до их выполнения и блокировать их, если они признаны опасными. Для выявления несанкционированных команд используется сопоставление шаблонов, а в случае с файлами сценариев хэш файла сравнивается с хэшами известных несанкционированных файлов сценариев.',
  'Shadow Stack Comparisons': 'Эта техника сравнивает стек вызовов, хранящийся в системной памяти, с теневым стеком вызовов, хранящимся в кэш-памяти процессора. Несоответствия между ними сравниваются, поскольку атака, ориентированная на возвратно-ориентированное программирование, может контролировать или подделывать только стек вызовов, но не теневой стек вызовов. Несоответствия подсчитываются, и если количество несоответствий превышает определенный порог, это свидетельствует о несанкционированной активности, и выполняется ответное действие системы безопасности.',
  'System Call Analysis': 'Системные вызовы - это API между пользовательским приложением и операционной системой.\n\nАнализируя использование процессом этих API, в некоторых случаях можно установить, проявляет ли программа несанкционированное поведение, в том числе пытается ли она повысить свои привилегии.',
  'Authentication Event Thresholding': 'Для формирования модели активности собираются данные о событиях аутентификации (информация о входе в систему, такая как идентификатор устройства, время суток, день недели, геолокация и т. д.). Затем определяется порог либо с помощью заданной вручную конфигурации, либо с помощью статистического анализа отклонений в данных за прошлые периоды. Новые события аутентификации оцениваются на предмет превышения порога. Пороги могут быть статическими или динамическими.',
  'Authorization Event Thresholding': 'Данные о событиях авторизации собираются для формирования базового профиля пользователя. События авторизации, которые отклоняются от базового профиля и превышают статический или динамический порог, определяются для дальнейших действий. События авторизации могут включать успешные и неудачные попытки авторизации, а также события, связанные с разрешениями, включая просмотр, редактирование, удаление, создание файлов, баз данных и т. д.',
  'Job Function Access Pattern Analysis': 'Анализ групп коллег выявляет функционально схожие группы участников (пользователей или ресурсов) на основе таких категорий, как должность, организационная иерархия или другие атрибуты, указывающие на схожесть должностных функций.',
  'Resource Access Pattern Analysis': 'Эта техника анализирует доступ пользователя к ресурсам, сравнивая его недавнюю активность с базовой моделью активности. Значительные различия между текущей активностью и базовой моделью могут указывать на несанкционированную деятельность, если они достаточно серьезны.',
  'Session Duration Analysis': 'Обнаружение несанкционированных сеансов пользователя путем сравнения продолжительности сеанса входа пользователя в систему с базовой моделью поведения. Модель поведения включает в себя данные о длительности сеансов пользователей за прошлые периоды. Отклонения между продолжительностью сеанса и моделью поведения могут указывать на подозрительную активность.',
  'User Data Transfer Analysis': 'Необычная активность передачи данных может указывать на несанкционированную деятельность. Передачу данных можно проанализировать, собрав сетевой трафик или журналы приложений.',
  'User Geolocation Logon Pattern Analysis': 'Данные о геолокации для каждой попытки входа пользователя в систему собираются и используются для создания базового профиля поведения пользователя. Затем текущие геолокационные данные о входе в систему сравниваются с профилем поведения пользователя. Активность при входе в систему, отклоняющаяся от обычных шаблонов, может помочь в выявлении ситуаций, которые могут свидетельствовать об удаленном злоумышленнике, использующем украденные учетные данные. Например:\n  - вход в систему из мест, отличных от тех, где пользователь обычно входит в систему\n  - вход в систему из места, в котором у предприятия нет пользователей\n  - вход в систему, который физически невозможен, учитывая время, прошедшее с момента входа в систему из другого места.',
  'Web Session Activity Analysis': 'Данные о веб-сессии пользователя собираются в течение определенного периода времени для создания профиля поведения пользователя. Собранные данные включают в себя количество кликов на веб-сайте, среднее время между кликами, заполнение веб-форм, порядок просмотра страниц и загрузку файлов. Затем поведение текущей веб-сессии пользователя сравнивается с профилем поведения пользователя для выявления аномалий и вероятности того, что текущая веб-сессия пользователя является вредоносной. Поведение текущей веб-сессии пользователя также можно сравнить с заранее определенными профилями поведения известных вредоносных программ, которые были разработаны на основе анализа вредоносных программ во время выполнения в центре исследования угроз.',
  'Executable Allowlisting': 'Эта техника является универсальной, и существует множество способов вычисления и проверки подлинности цифровых подписей. Цифровой сертификат генерируется на основе пары закрытый/открытый ключ, выданной удостоверяющим центром (УЦ). Хеш файла шифруется с помощью закрытого ключа. Когда файл загружается другим пользователем, система пользователя использует открытый ключ для расшифровки хэша, и создается новый хэш загруженного файла. Хэш, расшифрованный с помощью открытого ключа, сравнивается с новым хэшем, и в случае несоответствия могут быть задействованы другие методы, такие как удаление файла, помещение файла в карантин или внесение исполняемого файла в черный список.',
  'IO Port Restriction': 'При программном ограничении используется программное обеспечение агента, установленное на компьютерной системе. Программное обеспечение агента отслеживает весь системный трафик портов ввода-вывода. Программное обеспечение агента настраивается на ограничение использования определенных устройств, подключенных к портам ввода-вывода. Программное обеспечение может быть настроено на ограничение доступа к файлам и приложениям на внешних устройствах хранения, подключенных к портам ввода-вывода.\n\nДля ограничения доступа к портам ввода-вывода можно также использовать аппаратное ограничение. Например, аппаратное устройство USB-фильтрации, размещаемое между хост-системой и внешними устройствами, может фильтровать подключения к портам ввода-вывода на основе настраиваемых правил. При подключении новых устройств к USB-фильтру определяется тип устройства. С помощью списка разрешенных устройств определяется тип подключения.\n\nНекоторые реализации обнаруживают подключение устройства, чтобы разрешить соединение по списку разрешенных устройств, в некоторых случаях по типу устройства. Например, если определено, что устройство является устройством хранения данных, то для более точной идентификации типа устройства проверяются содержащиеся в нем файлы и исполняемые файлы.',
  'Mandatory Access Control': 'Мандатный контроль доступа - это недискреционная система контроля доступа, поскольку правила и политики, определяющие доступ, устанавливаются центром управления безопасностью и не распространяются среди локальных пользователей. Определение доступа основано на разработанных политиках управления доступом и не основано на локальных определениях владельцев ресурсов.\n\nДоступ обычно предоставляется путем определения наборов субъектов и наборов объектов. Субъекты - это субъекты, запрашивающие доступ, а объекты - это ресурсы, к которым субъекты пытаются получить доступ. Определяются правила и политики, которые связывают разрешения субъектов и объектов с контролем доступа.',
  'Broadcast Domain Isolation': 'Software Defined Networking или другие технологии сетевой инкапсуляции перехватывают широковещательный трафик хоста и направляют его к определенному месту назначения в соответствии с настроенной политикой.\n\nЭто может быть реализовано в гипервизорах, сетевом оборудовании (WAP, коммутаторы, маршрутизаторы) или виртуальном оборудовании.',
  'Forward Resolution Domain Denylisting': 'Создаются политики, которые фильтруют DNS-запросы, используя полное доменное имя (FQDN) записи в запросе. Можно создать политику DNS для блокирования DNS-запросов от FQDN, которые были определены как неавторизованные.',
  'Hierarchical Domain Denylisting': 'Иерархический черный список доменов предусматривает внесение в черный список доменов второго уровня, дополнительных поддоменов и конкретных хостов для заданного значения запроса. Ведется черный список, содержащий имена DNS и соответствующие поддомены, включая wildcard, которые должны быть заблокированы для данного поиска.',
  'Homoglyph Denylisting': 'Черный список омоглифных доменов учитывает структуру доменов и поддоменов в поиске и сравнивает именованные компоненты с компонентами, внесенными в черный список. Именованные компоненты в черном списке обычно являются модификациями известных хороших доменов, например gooogle.com вместо google.com. Домены из черного списка обычно похожи на доверенные домены, но слегка изменены, чтобы обмануть пользователей.\n\nКомпоненты с именами из черного списка также учитывают шрифты или символы Юникода, из-за которых некоторые символы могут выглядеть очень похожими (ноль против заглавной буквы O и буква l против цифры один). Домены из черного списка при использовании определенных шрифтов будут выглядеть как доверенные домены.',
  'Email Filtering': 'Почтовые фильтры могут быть реализованы для проверки входящих сообщений электронной почты на этапе начального SMTP-соединения, чтобы обнаружить и отклонить письма, содержащие спам и вредоносное ПО.\n\nЭта техника отличается от d3f:EmailDeletion, поскольку она предотвращает попадание письма в папку входящих сообщений пользователя. Эта техника также может использоваться для трафика исходящей электронной почты.',
  'Connected Honeynet': 'В корпоративной среде развертываются приманки», которые эмулируют определенные службы или части ОС, чтобы привлечь злоумышленников.',
  'Decoy File': 'Файл-«приманка» становится доступным в качестве локального или сетевого ресурса. Доступ к файлу может контролироваться. Файлы могут быть конфигурациями, документами, исполняемыми файлами или файлами других типов.',
  'Decoy Network Resource': 'Сетевые ресурсы-«приманки» размещаются на серверах веб-приложений, сетевых файлообменниках или других сетевых сервисах совместного доступа.\n\nВ « honeypot» могут использоваться различные ложные сетевые ресурсы.',
  'Decoy Public Release': 'К публичным медиа относятся пресс-релизы, видеоролики и другие маркетинговые материалы. Медиа могут содержать URL-адреса, контактные данные или другие идентификаторы, чтобы привлечь злоумышленников к взаимодействию.',
  'Decoy Session Token': 'Использование обманных токенов сессий может использоваться для отслеживания поведения злоумышленника или иного контроля его действий.',
  'Account Locking': 'Серверы администрирования с корпоративными политиками управления учетными записями предоставляют возможность включать и отключать учетные записи по заданным правилам. Правила могут включать определенные периоды времени (например, выходные, остановка предприятия, отпуск), определенные типы или группы пользователей или отдельных пользователей.',
  'Authentication Cache Invalidation': 'Приложения могут локально кэшировать учетные данные аутентификации пользователя для определенных подключений к серверу. Приложение может попытаться использовать кэшированные учетные данные для подключения. Если кэшированные учетные данные существуют, то пользователю не будет предложено ввести новые учетные данные.',
  'File Removal': 'Злоумышленники могут поместить файлы или программы в файловую систему компьютера для выполнения вредоносных действий. В процессе ликвидации этих программ необходимо удалить их, чтобы предотвратить дальнейшую компрометацию или повторное заражение. Примерами вредоносных типов файлов являются непосредственно вредоносные программы и файлы содержимого, предназначенные для обмана пользователей (например, фишинг).\n\nВ системах Windows для безопасного и окончательного удаления вредоносных файлов следует использовать антивирусное (AV) программное обеспечение. Антивирусное программное обеспечение может сначала поместить подозреваемый вредоносный файл в карантин - это процесс перемещения файла из его исходного местоположения в новое место и внесения изменений, чтобы он не мог быть выполнен. Затем пользователи могут убедиться, что файл не является безопасным, и удалить его навсегда.',
  'Email Removal': 'Удаление электронной почты - это техника, которая может быть использована для предотвращения выполнения пользователем вредоносных программ или ответа на попытки фишинга. Программное обеспечение безопасности или сами пользователи могут обнаружить вредоносные или подозрительные письма в локальной или удаленной почтовой папке, а затем применить эту технику.',
  'Host Shutdown': 'Выключение хоста может быть инициировано либо в физически с помощью функций питания, либо удаленно с помощью предоставляемого пользовательского интерфейса или установленного агента EDR (с доступной функцией). Этот процесс может позволить удалить определенные типы вредоносных программ, например безфайловые, а также предотвратить дальнейший ущерб, например, если система является частью ботнета.',
  'Host Reboot': 'Перезагрузка хоста может быть инициирована либо в физически с помощью функций питания, либо удаленно с помощью предоставленного пользовательского интерфейса или установленного агента EDR (с доступной функцией). Этот процесс может позволить удалить определенные типы вредоносных программ, например безфайловые, а также предотвратить дальнейший ущерб, например, если система является частью ботнета.',
  'Process Suspension': 'Запущенный процесс может быть приостановлен для снижения непосредственных последствий, если он проявляет аномальное, несанкционированное или вредоносное поведение. Защитники могут выбрать приостановку, а не завершение, чтобы сначала проанализировать процесс и возобновить его, если он будет признан безопасным.',
  'Process Termination': 'Процессы управляются ядром операционной системы. Различные ядра операционных систем управляют созданием и завершением процессов по-разному и предоставляют эту функциональность через API ядра.\n\nЗапущенный процесс может быть завершен для снижения непосредственных последствий, если он проявляет аномальное, несанкционированное или вредоносное поведение; например, после обнаружения аномального поведения с помощью анализа сетевой активности, после неудачной проверки Stack Frame Canary Validation или после того, как анализ системных вызовов обнаружил попытку выполнения несанкционированного системного вызова.'
};
